2010-10-22 12:08  omsynge

	* ChangeLog: Updating Chnage log

2010-10-22 11:58  omsynge

	* src/Makefile.am: dcap header reorganization missed adding header
	  files to Makefile.am
	  
	  The build target "make dist" no longer contained all the header
	  files required to build dcap.
	  
	  This caused the build target "make rpm" to fail.
	  
	  http://svn.dcache.org/build/job/dcapBuildPackage_VDT_x64_SL_5.4_trunk/4/console
	  
	  With this patch, the target "make rpm" now works.
	  
	  
	  Signed-off-by: Paul
	  Patch: http://rb.dcache.org/r/2568/

2010-10-21 15:31  pmillar

	* src/Makefile.am, src/dcap_close.c, src/dcap_lcb.c,
	  src/dcap_lcb.h, src/dcap_open.c, src/dcap_read.c,
	  src/dcap_types.h: dcap: add initial support for local caching
	  (dcap++)
	  
	  This patch adds support for a simple LRU cache: a Local Cache
	  Buffer (LCB).
	  
	  It is a reworked version of the patch from Guenter Duckeck
	  <Guenter.Duckeck@physik.uni-muenchen.de>. When reworking it, I've
	  tried to make
	  the algorithm more readable by splitting the functionality into
	  separate
	  functions. I've also removed code-duplication (as much as
	  possible), those
	  variables and structure members that weren't actually used, all
	  the commented-out
	  code and the (logical) dead-code.
	  
	  I've tried to fix some of the issues Gerd raised in his initial
	  review; however,
	  some of these issues, whilst certainly valid, may not be worth
	  fixing here.
	  Instead, we can address them with a rewrite of dcap so it has a
	  generic caching
	  layer (as Tigran proposes).
	  
	  I've copied Gerd's comments that are still outstanding into the
	  code as comments
	  prefixed with "REVISIT".
	  
	  I'm aware of a number of limitations with the code as-is:
	  a) the first cache block (block-number 0) must always be cached,
	  
	  b) the algorithm is O(n), where n is the number of blocks,
	  
	  c) behaviour under error conditions [either dc_real_read() fails
	  returning -1 or it read fewer bytes than requested when not
	  at EOF] is poor.
	  
	  d) the code disables read-ahead (RA) which, I believe isn't
	  necessary.
	  Current implementation of LCB+RA is suboptimal, but should be
	  functional.
	  
	  e) if LCB+RA is not allowed, then client code can subvert this
	  by explicit call to dc_setBufferSize().
	  
	  Patch: http://rb.dcache.org/r/2475/
	  Target: trunk
	  Acked-by: Gerd
	  Acked-by: Tigran
	  Acked-by: Owen

2010-10-18 08:45  pmillar

	* src/dcap_test.c: dcap: update test program
	  
	  The program dcap_test provides a basis for testing the dcap
	  library. It uses a
	  specially formatted file, creating it if necessary, where the
	  file contains offset
	  information stored as 4-byte integer values. This allows the test
	  to verify the
	  contents of the data when reading.
	  
	  The patch alters the format of the data in two ways:
	  
	  1) the byte-order of the integers is fixed to be
	  network-byte-order. Previously it was host byte-order,
	  which lead to ambiguity that had to be worked around.
	  
	  2) the offset had a somewhat counter-intuitive meaning:
	  the offset recorded in the file is the offset of the
	  following byte.
	  
	  After the patch, the integer value of a 4-byte sequence is the
	  offset of the first
	  of the four bytes. The first 32 bytes of the file are now:
	  
	  00 00 00 00 00 00 00 04 00 00 00 08 00 00 00 0c
	  00 00 00 10 00 00 00 14 00 00 00 18 00 00 00 1c
	  
	  The dcap_test program tests the ability to read data by
	  repeatedly reads a (fixed)
	  block of data and skipping forward a small, random amount until
	  the file is
	  exhausted. The data read is verified by checking it against the
	  expected values.
	  
	  This patch enhances the tests. It decouples the access patterns
	  from the mechanism
	  for running the pattern. In addition to the existing access
	  pattern (now called
	  "walking forward"), the patch introduces additional
	  access-patterns: "walking
	  forward with random initial offset", "walking backward", "random
	  4-byte reads" and
	  "random block reads".
	  
	  The patch includes one "runner" that implements a round-robin
	  selection of the
	  selected access patterns. Any number of access patterns may be
	  given. This allows
	  multiple patterns to be stacked; for example, "walking forward" +
	  "walking backward"
	  gives a cross-like access pattern.
	  
	  The access-patterns are written to externalise their state, so
	  multiple instances of
	  the same access-pattern may be used by a runner. Combining two
	  "walking forward
	  with random initial offset" simulates the ATLAS ROOT access
	  pattern.
	  
	  The round-robin runner has a selectable terminate conditions.
	  There are three
	  possible termination conditions: after the first access-pattern
	  completes, after the
	  last access-pattern completes, or after a fixed number of
	  iterations. If an
	  access-pattern terminates before the runner terminate condition
	  then that
	  access-pattern is disabled and the runner will continue with the
	  remaining
	  access-patterns.
	  
	  Possible future work is described at the beginning of the file.
	  These include
	  adding a multithreaded runner, to test dcap when used by multiple
	  threads
	  concurrently; and adding support for testing multiple file
	  descriptors concurrently.
	  
	  Patch: http://rb.dcache.org/r/2478/
	  Target: trunk
	  Acked-by: Owen
	  Acked-by: Tigran

2010-10-13 14:22  pmillar

	* src/dcap_debug.h: dcap: fix compilation on Solaris
	  
	  Patch committed as r.14673 broke compilation on Solaris. This
	  patch fixes this.
	  
	  Patch: http://rb.dcache.org/r/2517
	  Acked-by: Owen
	  Target: trunk

2010-10-13 12:11  pmillar

	* src/dcap_debug.c, src/dcap_debug.h: dcap: refactor dcap debugging
	  slightly
	  
	  dcap library provides a debugging support where different
	  channels ("levels") of output
	  may selected.
	  
	  This patch adds two additional methods: dc_vdebug and
	  dc_is_debug_level_enabled. Both
	  are exposed to other components within the dcap library but are
	  not listed as public
	  methods.
	  
	  The dc_vdebug method is a var-args version of the dc_debug
	  method. This is similar to
	  the 'v' version of the printf family of functions (printf vs
	  vprintf, etc).
	  
	  The dc_is_debug_level_enabled returns True (1) if the supplied
	  level is enabled, False
	  (0) if not. This is intended to allow external modules to avoid
	  work that will not be
	  used in generating output.
	  
	  Patch: http://rb.dcache.org/r/2510/
	  Target: trunk
	  Acked-by: Gerd

2010-10-12 17:05  pmillar

	* bootstrap.sh: Reverting commit 14671 as Solaris packaging is more
	  broken than I thought

2010-10-12 15:09  pmillar

	* bootstrap.sh: dcap: fix bootstrap.sh to work on Solaris
	  
	  Solaris packaging provides tools like aclocal and automake as
	  filenames with a
	  version-specific suffix (e.g., aclocal-1.11, automake-1.9, etc);
	  moreover, we cannot
	  necessarily mix-and-match. We must use tools with a consistent
	  version; for example,
	  running v1.11 of aclocal with automake.
	  
	  The current implementation of bootstrap.sh simply invokes
	  "aclocal" and "automake"
	  without any version-specific suffix. This doesn't work on
	  Solaris. There is
	  commented-out lines in the current bootstrap.sh that include a
	  version-specific suffix,
	  suggesting this issue is known but not addressed.
	  
	  This patch fixes the problem. It looks for a set of consistently
	  named tools with a
	  version-specific prefix, in decreasing version numbers (1.11,
	  then 1.10, then 1.9). If
	  these all fail, it tries again without any version-specific
	  suffix. If none of these
	  succeed then the script fails with a suitable error message.
	  
	  The output (on the terminal) from running bootstrap.sh should be
	  identical to
	  previously. The behaviour on running bootstrap.sh should be
	  identical, including that
	  it terminates immediately after any failing step.
	  
	  Patch: http://rb.dcache.org/r/2465/
	  Acked-by: Owen
	  Target: trunk

2010-10-07 14:27  pmillar

	* src/Makefile.am: dcap: fix building on Solaris
	  
	  A previous commit (committed as r14667) broke compilation on
	  Solaris machines when using the
	  Solaris compiler. This patch fixes that problem.
	  
	  Target: trunk
	  Patch: http://rb.dcache.org/r/2487/
	  Acked-by: Owen

2010-10-07 13:33  pmillar

	* src/Makefile.am, src/dccp.c, src/print_size.c, src/print_size.h,
	  src/sigfig.c, src/sigfig.h: dcap: add -H option to dccp that
	  provides feedback during transfer
	  
	  Whilst in Karlsruhe for GridKa school, I was talking to someone
	  about their experience of dCache
	  being very slow when copying files into and from dCache via dccp.
	  The user was unable to answer
	  simple questions that might indicate what is the problem (where
	  you waiting for a mover? was the
	  checksum taking a long time? was the transfer slow on-average, or
	  did it "stutter"?). I released
	  that this information is currently difficult (or impossible) to
	  obtain with dccp. Moreover, without
	  any feedback during a transfer, one must have blind faith that
	  the transfer is proceeding.
	  
	  This patch addresses this issue. It provides some feedback to the
	  user during a transfer. The
	  feedback uses the (old) method of writing output without the
	  line-feed character ('\n') but using the
	  carriage-return character ('\r') instead. Repeated use of such
	  output gives the user the impression
	  of a single line of text is being updated with new information.
	  Some care is needed to append spaces
	  to the end of the new version of the line if it has shrunk. This
	  is to hide character(s) from the
	  previous line.
	  
	  The transfer feedback line contains a progress bar followed by
	  zero or more items. The items are:
	  percentage of file transferred, number of bytes transferred and
	  the average transfer rate. The code
	  determines the width (number of columns) of the terminal
	  dynamically and scales the output
	  accordingly. If the terminal has sufficient width then all items
	  are displayed and the bar is scaled
	  to take (almost) all of the line's remaining capacity. If the
	  width is too small to allow this then
	  items are progressively switched off to provide additional space,
	  allowing the progress bar to grow
	  in size. This continues until a minimum width of the progress bar
	  is achieved or all items are
	  switched off (whichever happens first).
	  
	  The progress bar is a sequence of characters the first being the
	  open square-bracket and the last
	  being the close square-bracket. Those in between are either a
	  dash ('-') or a hash ('#') and form
	  the part that indicates the transfer's progress.
	  
	  If the size of the file being transferred is known in advance,
	  the progress bar is a "percentage
	  progress bar". This shows information as a sequence of zero or
	  more hash symbols followed by zero or
	  more dashes. The total number of symbols is fixed, for given a
	  progress bar size. The number of
	  hash- and dash- symbols is chosen to be proportional to the
	  amount of data written and still to write
	  respectively. The result is an ASCII-art version of the familiar
	  GUI progress-bar. It is also how
	  the rpm command shows progress.
	  
	  The following is an example line when the file size is known and
	  the terminal is sufficiently wide to
	  allow all items:
	  
	  [#######---------------------------------------------------------------]
	  11% 45.0 MiB (4.09 MiB/s)
	  
	  If the size of the transfer isn't known in advance (e.g., data is
	  taken from stdin) then it is
	  impossible to show a "percentage activity bar". Instead, the
	  progress bar is an "activity progress
	  bar". This indicates bytes transferred as a shorter bar (made up
	  of some five hashes). This shorter
	  bar is initially left-most within the progress bar and "moves to
	  the right" as data is written. When
	  the shorter bar reaches the end of the activity bar, it wraps.
	  (This similar to how Firefox shows
	  progress under similar circumstances.)
	  
	  The following is an example when the transfer size is unknown and
	  the terminal is sufficiently wide
	  to allow all items:
	  
	  [-----#####----------------------------------------------------------------]
	  8.00 MiB (4.00 MiB/s)
	  
	  In writing this support, I adding a function for formatting file
	  sizes using SI binary prefixes (kiB,
	  MiB, etc), taking care of aesthetics. The patch also updates the
	  final line of output (which gives a
	  summary of the transfer) to also use the new function.
	  
	  The following is an example of current dccp's final output line:
	  
	  417488294 bytes in 78 seconds (5226.97 KB/sec)
	  
	  This is an example of final output line after patch:
	  
	  417488294 bytes (398 MiB) in 76 seconds (5.24 MiB/s)
	  
	  Current limitations and future work:
	  o no user feedback when the transfer stalls,
	  o could add an estimate of the time remaining until the transfer
	  finishes.
	  
	  Target: trunk
	  Patch: http://rb.dcache.org/r/2400/
	  Acked-by: Gerd
	  Acked-by: Owen
	  

2010-09-23 08:08  pmillar

	* src/dcap_error.c: dcap: fix type casting of type-punning
	  
	  In dcap_error.c, the support for thread-local variable,
	  t_getspecific macro,
	  which is a simple wrapper around pthread_getspecific(), is used
	  in dcap_error to
	  obtain a ptr to the thread-local errno. The dcap_error casts this
	  pointer to a
	  (void *), rather than (int *).
	  
	  Assigning to a type-punning, like this, is not allowed by C89/C90
	  standard but
	  historically, compilers turn a blind eye to them.
	  
	  It's legal to assign a (void *) point to any other kind of
	  pointer without
	  casting. The pthread_getspecific() function returns a (void *)
	  pointer, so the
	  explicit casts in dcap_error are actually unnecessary.
	  
	  The proposed patch fixes the "dereferencing type-punned pointer
	  will break
	  strict-aliasing rules" warnings.
	  
	  Patch: http://rb.dcache.org/r/2452/
	  Target: trunk
	  Acked-by: Gerd

2010-09-23 08:02  pmillar

	* src/dccp.c: dcap: fix possible use of uninitialised variable
	  
	  The copyfile method in dccp is responsible for copying the data
	  from source to
	  destination. This function allocates a buffer to hold an amount
	  of data. If
	  this allocation fails then the file size is not set and the
	  corresponding print
	  statements use an uninitialised value for the transferred size.
	  
	  This patch fixes this by initialising size to zero.
	  
	  Target: trunk
	  Patch: http://rb.dcache.org/r/2457/
	  Acked-by: Gerd

2010-09-23 07:59  pmillar

	* src/dcap_dirent.c: dcap: remove unused function declared in
	  dcap_dirent
	  
	  The char2dirent is not used anywhere in dcap code. This patch
	  removes it.
	  
	  Patch: http://rb.dcache.org/r/2458/
	  Target: trunk
	  Acked-by: Gerd

2010-09-23 07:57  pmillar

	* src/dcap_read.c: dcap: fix (void *) pointer arithmetic in
	  dcap_read
	  
	  The buffer argument to dcap_real_read function is defined to be
	  (void *), i.e., a
	  pointer to some absolute location in memory.
	  
	  However, the dcap_real_read implementation treats the buffer
	  pointer as if it
	  pointed to an array of bytes, which is natural. However, in doing
	  this, the code
	  increments the pointer as data is read. This doesn't make sense
	  for a (void *)
	  pointer, it only makes sense for a pointer to an array of some
	  type with
	  well-defined length.
	  
	  This patch fixes this by accepting a (void *) pointer as an
	  argument but
	  assigning the value to a (char *) variable. This makes explicit
	  the semantics
	  currently only tacit in the code.
	  
	  Patch: http://rb.dcache.org/r/2460/
	  Target: trunk
	  Acked-by: Gerd

2010-09-22 13:08  pmillar

	* src/dcsuck.c: Silence compiler warning
	  
	  gcc emits a warning about possible misunderstanding of
	  arithmetic bitwise operator precedence (AND has higher
	  precedence than OR). It suggests putting parentheses around the
	  term to make the logic explicit.
	  
	  This patch follows the compilers advice.
	  
	  Target: trunk
	  Patch: http://rb.dcache.org/r/2459
	  Acked-by: Tigran

2010-09-22 10:17  pmillar

	* ., config, plugins, plugins/gssapi, plugins/ssl, plugins/telnet,
	  src: Teach SVN to ignore generated files.
	  
	  Tigran, Owen and Gerd are all happy with this.

2010-09-21 12:29  pmillar

	* src/io.c: dcap: remove two dead functions
	  
	  The file io.c contains two functions "writeln" and "readln" that
	  are not used
	  anywhere in dcap. This patch removes them.
	  
	  Target: trunk
	  Patch: http://rb.dcache.org/r/2445/
	  Acked-by: Owen

2010-09-21 12:27  pmillar

	* src/dcap_write.c: dcap: fix dc_writev bug
	  
	  The dc_writev function wraps the POSIX writev vector write (a.k.a
	  "gather write")
	  function. It loops over the vector and builds a complete buffer
	  that is sent to the
	  mover.
	  
	  The loop depends on the variable iobuf_pos, which is incremented
	  when processing the
	  elements of the vector; however, iobuf_pos is not initialised to
	  zero so may take an
	  arbitrary value.
	  
	  This patch fixes this by initialising iobuf_pos to zero.
	  
	  Target: trunk
	  Patch: http://rb.dcache.org/r/2444/
	  Acked-by: Owen

2010-09-21 12:25  pmillar

	* src/dcap_stream.c: dcap: fix bug in dc_fgets
	  
	  The function dc_fgets is the dcap wrapper of the POSIX fgets. The
	  implementation
	  contains a bug: if the size argument is zero then the return
	  value depends on an
	  uninitialised variable: n. If the uninitialised value of n is
	  less than zero then
	  the function returns the wrong value.
	  
	  The patch fixes this by initialising n to zero.
	  
	  Patch: http://rb.dcache.org/r/2443/
	  Target: trunk
	  Acked-by: Owen

2010-09-21 12:22  pmillar

	* src/dcap.c: dcap: fix hostname label initialisation
	  
	  In dcap, if the hostname of the door did not resolve then the
	  logging would attempt
	  to record an uninitialised string.
	  
	  This patch fixes this.
	  
	  Target: trunk
	  Patch: http://rb.dcache.org/r/2441/
	  Acked-by: Owen

2010-09-21 12:20  pmillar

	* src/dcap.c: dcap: ensure ConfirmationBlock is initialised before
	  replying
	  
	  The compiler noticed that the ConfirmationBlock variable "reply"
	  is not completely
	  initialised in the error case.
	  
	  This patch fixes this by initialising the structure to an
	  all-zeros state before
	  writing the code part.
	  
	  Patch: http://rb.dcache.org/r/2440/
	  Acked-by: Owen
	  Target: trunk

2010-09-21 12:17  pmillar

	* src/dcap.c: dcap: add missing return type in function declaration
	  
	  A previous commit added a function declaration without including
	  the return-type of
	  the function; whilst technically legal, it is not good practice
	  and results in a
	  compiler warning.
	  
	  This patch fixes this issue by adding the return-type for the
	  function.
	  
	  Patch: http://rb.dcache.org/r/2439/
	  Target: trunk
	  Acked-by: Owen

2010-09-21 12:01  pmillar

	* src/dcap_acl.c: dcap: fix Solaris building (second part)
	  
	  The file debug_level.h has a dual purpose: it contains the
	  definitions of the
	  various debug levels and it also is the entry-point for the HAVE_
	  macros that the
	  autoconf system builds.
	  
	  In future, these two purposes need to be separated; however, for
	  now, we fix the
	  compilation problem by accepting the dual-role of this file and
	  including it when we
	  need to know the value of the HAVE_ macros.
	  
	  Patch: http://rb.dcache.org/r/2451
	  Acked-by: Tigran
	  Target: trunk

2010-09-21 10:31  pmillar

	* src/dcap.h.in, src/dcap_preload.c: dcap: fix compilation on
	  Solaris
	  
	  There were two problems when trying to compile dcap for Solaris
	  that a previous
	  patch introduced.
	  
	  The first problem is trivial: the man-page for the stat(2)
	  command states that
	  sys/types.h, sys/stat.h and unistd.h must be included. However,
	  it doesn't state in
	  which header file struct stat is defined.
	  
	  The dcap.h file includes function prototypes using struct stat.
	  It includes
	  sys/types.h, but not sys/stat.h. On GNU systems, including
	  sys/types.h is
	  sufficient for a definition of struct stat; however, on Solaris
	  machines sys/stat.h
	  must be included for the definition of struct stat.
	  
	  The fix is to include sys/stat.h in dcap.h
	  
	  The second problem is slightly more complex: on Solaris, the
	  stat(2), lstat(2) and
	  fstat(2) methods are defined, in the header sys/stat_impl.h, as
	  static local
	  functions. This means that each compiled object file will include
	  its own
	  implementation of the stat, lstat and fstat functions. These
	  implementations are
	  simply a wrapper around "x"-versions of the functions (_xstat,
	  _lxstat, _fxstat
	  respectively). The purpose is to encode a hard-coded version
	  number as an argument
	  to these methods as a backwards compatibility measure.
	  
	  However, this means that, in dcap_preload.c, there are two
	  definitions for each of
	  the three stat-functions (stat, lstat, fstat). The first set of
	  definitions come
	  from sys/stat_impl.h and the second set comes from dcap_preload.c
	  itself. The
	  proposed solution is to move the definition of stat, lstat and
	  fstat into the
	  corresponding #else clause. This allows the "built-in" wrapper in
	  Solaris to
	  operate, mapping (for example) stat --> _xstat. The _xstat
	  implementation is
	  overloaded by dcap_preload.c, which will handle the request using
	  dcap's
	  implementation of stat.
	  
	  Patch: http://rb.dcache.org/r/2449/
	  Target: trunk
	  Acked-by: Tigran

2010-09-20 17:01  pmillar

	* src/dcap_poll.c: dcap: fix strict C90 compliance in dcap_poll.c
	  
	  Strict C90 compliance requires that variable declaration and code
	  may not be mixed.
	  
	  This is not true for dcap_poll.c
	  
	  This patch fixes this.
	  
	  Patch: http://rb.dcache.org/r/2442/
	  Target: trunk
	  Acked-by: Owen

2010-09-20 14:28  pmillar

	* src/Makefile.am, src/array.c, src/br.c, src/char2crc.c,
	  src/char2crc.h, src/dcap.c, src/dcap.dsp, src/dcap_accept.c,
	  src/dcap_access.c, src/dcap_acl.c, src/dcap_ahead.c,
	  src/dcap_ahead.h, src/dcap_checksum.c, src/dcap_checksum.h,
	  src/dcap_chmod.c, src/dcap_chown.c, src/dcap_close.c,
	  src/dcap_close.h, src/dcap_command.c, src/dcap_debug.c,
	  src/dcap_debug.h, src/dcap_dirent.c, src/dcap_dup.c,
	  src/dcap_error.c, src/dcap_error.h, src/dcap_fsync.c,
	  src/dcap_fsync.h, src/dcap_functions.h, src/dcap_interpreter.c,
	  src/dcap_lib.dsp, src/dcap_lseek.c, src/dcap_lseek.h,
	  src/dcap_mkdir.c, src/dcap_mqueue.c, src/dcap_nodes.h,
	  src/dcap_open.c, src/dcap_poll.c, src/dcap_poll.h,
	  src/dcap_preload.c, src/dcap_preload64.c, src/dcap_protocol.c,
	  src/dcap_protocol.h, src/dcap_read.c, src/dcap_read.h,
	  src/dcap_reconnect.c, src/dcap_rename.c, src/dcap_shared.h,
	  src/dcap_signal.c, src/dcap_signal.h, src/dcap_stat.c,
	  src/dcap_stream.c, src/dcap_test.c, src/dcap_types.h,
	  src/dcap_unix2win.c, src/dcap_unix2win.h, src/dcap_unlink.c,
	  src/dcap_url-test.c, src/dcap_url.c, src/dcap_url.h,
	  src/dcap_version.c.in, src/dcap_win32.h, src/dcap_write.c,
	  src/dcap_write.h, src/dccp.c, src/dccp_linux_directio.c,
	  src/dcsuck.c, src/dispatcher.c, src/fnal_thread.c,
	  src/gettrace.c, src/gettrace.h, src/input_parser.c, src/io.c,
	  src/io.h, src/ioTunnel.h, src/lineparser.c, src/lineparser.h,
	  src/linux_trace.c, src/node_plays.c, src/node_plays.h,
	  src/parser.c, src/passive.c, src/passive.h, src/pnfs.c,
	  src/readv_test.c, src/socket_nio.c, src/stack_trace.h,
	  src/str2errno.h, src/string2stat.c, src/string2stat.h,
	  src/system_io.c, src/thread_test.c, src/trace_back.h,
	  src/tunnelManager.c, src/wdccp.c, src/win32_dlfcn.h,
	  src/win32_libdl.c, src/win32_libdl.h: dcap: rationalise header
	  file usage
	  
	  Currently, dcap's code base has somewhat confused use of header
	  files and
	  prototypes.
	  
	  The dcap.h file contains all public material (macros, prototypes,
	  etc).
	  This file doesn't #include any other files and is intended for
	  distribution
	  with the library.
	  
	  Prototypes for non-public, shared functions are found one or more
	  of these
	  places:
	  o in the dcap_shared.h file (either directly or by this file's
	  #include of
	  additional header files),
	  o individual header files corresponding to the source file (e.g.,
	  functions
	  defined in dcap_foo.c are prototyped in dcap_foo.h),
	  o individual header files with dissimilar names (functions
	  defined in
	  dcap_foo.c are prototyped in dcap_bar.h),
	  o locally, in C files often just before they are used.
	  
	  For some functions, the prototypes are duplicated (some dcap code
	  sees one
	  prototype others see a different prototype). Some functions are
	  declared in
	  files that don't have access to (can't "see") that function's
	  prototype.
	  Both practises leave open the risk that the function
	  implementation and code
	  calling the function have different idea of the function's
	  signature ...
	  something the compiler could issue a warning about.
	  
	  Another issue with the current dcap code is with functions that
	  are only
	  used in the file that declares them. Most of these are declared
	  statically
	  (so the function's name isn't exposed to the linker). However
	  some
	  functions have been missed. These missed functions pollute the
	  function
	  namespace and make it harder to spot dead code.
	  
	  Yet another issue is that some macros and constant were
	  duplicated: any
	  mismatch between the declarations would lead to
	  difficult-to-diagnose bugs.
	  
	  This patch tries to rationalise the header file usage in dcap.
	  After the
	  patch ...
	  
	  The dcap.h file contains all public material (as before),
	  
	  Each C file has a corresponding header file with the .c replaced
	  with .h
	  (e.g., foo.c --> foo.h). The exception is for dcap.c. The
	  corresponding file cannot be called dcap.h since that file
	  already
	  exists; instead, dcap_functions.h is used instead.
	  
	  All functions are prototyped in precisely one location. That
	  location
	  depends on how the function is used:
	  
	  For functions that are not public and are used only in the
	  file that declares them, the prototype is near the beginning
	  of that file and is static (the actual declaration doesn't
	  have to be static).
	  
	  For functions that are not public and are shared (used in a
	  file other than where the function is declared) the
	  prototype is in the corresponding header file (e.g.,
	  dcap_foo.h for functions declared in dcap_foo.c).
	  
	  For functions that are public, the prototype is in the file
	  dcap.h.
	  
	  All declarations of a function have access to that file's
	  (single)
	  prototype (e.g., via a #include). This allows the compiler to
	  emit a
	  warning if the declaration doesn't match the prototype.
	  
	  Where it makes sense, the declaration of some structures has
	  moved to
	  the corresponding header file; for example, the declaration of
	  the
	  checksum structure is now in dcap_checksum.h. However, for now,
	  the
	  majority of the structures remain in dcap_types.h (may fix this
	  with
	  later patches).
	  
	  Files that no longer have any content are deleted; in particular,
	  the dcap_shared.h file.
	  
	  All include statements for dcap header files use the double-quote
	  form:
	  for example, #include "dcap_foo.h"
	  
	  All system library includes use the angle-bracket form; for
	  example,
	  #include <stdlib.h>
	  
	  All preprocessor define statements (declaring a macro or
	  constants) are
	  declared in precisely one location.
	  
	  Acked-by: Gerd
	  Acked-by: Owen
	  Target: Trunk
	  Patch: http://rb.dcache.org/r/2380/

2010-09-17 12:55  omsynge

	* src/dcap.c, src/dcap_open.c: dcap invalid parsing error catching
	  moved to later stage to unify as suggested by Charles.
	  
	  Since the old error checking did not handle all cases of renaming
	  files or stat I have moved the error handling to where Charles
	  suggested.
	  
	  Signed-off by: Tigran and Paul
	  http://rb.dcache.org/r/2431/

2010-09-16 15:38  omsynge

	* configure.ac: bumping the version number

2010-09-16 15:26  omsynge

	* src/dcap_open.c: dcap: name_invalid error throwing.
	  
	  The characters '\n' and an un escaped '"' will cause errors for
	  dcap causing a protocol violation and the code hanging.
	  
	  This code checks for invalid file names.
	  
	  The code checks in two places, as it should not effect local file
	  system names.
	  
	  Signed-off by: Tigran Mkrtchyan
	  http://rb.dcache.org/r/2426/

2010-09-16 13:18  omsynge

	* src/dcap_open.c: removing accidentally commited code

2010-09-16 13:16  omsynge

	* src/dcap.c, src/dcap_open.c: removing accidently commited debug
	  information

2010-09-16 12:42  omsynge

	* src/dcap.c: dcap: copy and paste error on changes.
	  
	  Fis to a clear error, which occurs on transfers without debugging
	  but not with debugging.
	  
	  This fix is clearly needed, and fixing it fixes behavior without
	  debugging.
	  
	  Signed-off by: Tigran Mkrtchyan
	  http://rb.dcache.org/r/2422/

2010-09-15 12:11  omsynge

	* src/dcap.c, src/dcap_str_util.c: dcap:Simple logic error when not
	  having to increase string length.
	  
	  the buffers are being swapped so that the output buffer can be
	  re-used as an input buffer for subsequent calls to this routine.
	  The old code only did this when the allocation buffer was growing
	  larger.
	  
	  Signed-off by: Paul
	  http://rb.dcache.org/r/2414/

2010-09-13 16:11  omsynge

	* src/dcap.c, src/dcap_str_util.c, src/dcap_str_util.h: dcap :
	  memory issues Protection against message truncation
	  
	  Charles Waldman was getting messages of character lengths in the
	  region of 3220. Along with messages from dcache saying missing
	  parameters.
	  
	  http://rt.dcache.org/Ticket/Display.html?id=5774
	  
	  I looked at the previous patch, http://rb.dcache.org/r/2027 which
	  addressed the issue of over running the buffer, but did not solve
	  the message truncation issue. This patch solves both the issues
	  solved in http://rb.dcache.org/r/2027
	  
	  Like the previous patch I based this one on the error handling
	  from the man page from snprintf, I also solve the issue that the
	  C language specification says that the, for s*printf family of
	  functions, the output buffer must not overlap with the inputs. If
	  they do the result is undefined.
	  
	  Signed-off by: Paul and Tigran
	  http://rb.dcache.org/r/2356/

2010-09-10 16:00  omsynge

	* dcap.spec.in: mock dcap build issue adding BuildRequires:
	  zlib-devel to rpm and srpm
	  
	  is needed to make "mock" work correctly, Brian Bockelman is using
	  "mock" to build dcap for OSG.
	  
	  Signed-off by: Tigran
	  http://rb.dcache.org/r/2399/

2010-09-03 15:01  pmillar

	* src/win32_dlfcn.h: Whitespace-only change: convert DOS ^M^J line
	  endings to unix-style ^J

2010-09-03 14:58  pmillar

	* src/win32_libdl.c: Whitespace-only change: convert DOS ^M^J line
	  endings to unix-style ^J

2010-09-03 09:00  pmillar

	* src/dcap_unix2win.c: Whitespace-only change: convert DOS ^M^J
	  line endings to unix-style ^J

2010-09-03 07:08  pmillar

	* src/currentThread.c: dcap: remove file and function that isn't
	  used anywhere
	  
	  The file currentThread.c contains a single function that isn't
	  used anywhere. The file itself isn't
	  compiled.
	  
	  Patch: http://rb.dcache.org/r/2370/
	  Target: trunk
	  Acked-by: Tigran Mkrtchyan

2010-09-01 10:27  omsynge

	* AUTHORS, COPYING, ChangeLog, INSTALL, Makefile.am, README,
	  configure.ac, dcap.spec.in: dcap packaging fixes, some files
	  where removed preventing rpm build succeeding.
	  
	  
	  Add some basic documentation to fix lack of rpm build, maybe the
	  error handling patches shoudl be removed but wanted to store them
	  some where safe,
	  
	  rpm building now works again.
	  
	  Signed-off by: Paul and Tigran
	  http://rb.dcache.org/r/2311

2010-08-30 13:59  pmillar

	* src/Makefile.am, src/dcap.c, src/dcap_poll.c,
	  src/dcap_str_util.c, src/dcap_str_util.h, src/dcap_url.c,
	  src/dccp.c, src/dcsuck.c: Ticket #5690:
	  
	  http://rt.dcache.org/Ticket/Display.html?id=5690
	  
	  describes how dcap library has code of the form:
	  
	  sprintf(s, "%s ...", s, ...);
	  
	  Ostensibly, this code will append some text to the end of s;
	  however, the code
	  is broken. The C language specification says that the, for
	  s*printf family of
	  functions, the output buffer must not overlap with the inputs. If
	  they do the
	  result is undefined.
	  
	  For many platforms, the above construct would work as expected:
	  the string s
	  would be appended. However, when gcc is invoked with
	  -Wp,-D_FORTIFY_SOURCE=2
	  flag and -O2 then the above construct produces unexpected
	  results. These
	  options for gcc are those used when creating official Fedora
	  packages.
	  
	  This patch removes the reliance on this non-portable behaviour.
	  It introduces
	  two new functions: dc_safe_strncat and dc_snaprintf.
	  
	  dc_safe_strncat is similar to strncat except that the size
	  parameter refers to
	  the size of the destination string's storage. A canonical usage
	  is:
	  
	  char dst [100];
	  
	  dc_safe_strncat( dst, sizeof(dst), src);
	  
	  This will append dst with src without overflowing dst. dst is
	  expected to be
	  '\0'-terminated on entering the function and will be
	  '\0'-terminated when the
	  function returns.
	  
	  dc_snaprintf() is a variation on snprintf(). The parameters have
	  the same
	  meaning as snprintf() but the string resulting from the
	  formatting is appended
	  on the end of the first argument string rather than replacing any
	  existing
	  content. Thus a call like:
	  
	  char dst [100];
	  strcpy( dst, "Example:");
	  dc_snaprintf( dst, sizeof(dst), " %d", 10);
	  printf( "%s\n", dst);
	  
	  will produce output:
	  
	  Example: 10
	  
	  In addition to removing the dependency on sprintf for appending a
	  string, the
	  code also removes the risk of overflowing the string buffer when
	  building the
	  dcap command.
	  
	  The patch also removes a bug in dcap_poll.c where a poll event
	  tagged
	  POLLRDBAND would be processed twice.
	  
	  Patch: http://rb.dcache.org/r/2027/
	  Acked-by: Thomas
	  Acked-by: Tigran
	  Target: trunk

2010-08-25 16:26  omsynge

	* AUTHORS, Makefile.am, dcap.spec.in, src/dcap.c,
	  src/dcap_command.c, src/dcap_poll.c, src/dcap_reconnect.c:
	  reverting patch applied in error

2010-08-25 16:22  omsynge

	* AUTHORS, Makefile.am, configure.ac, dcap.spec.in, src/dcap.c,
	  src/dcap_command.c, src/dcap_poll.c, src/dcap_reconnect.c: dcap
	  build process configure error with no value set for
	  LD_LIBRARY_PATH preventing globus plugin being detected as
	  possible to compile
	  
	  It seems a LD_LIBRARY_PATH of the value ":/opt/globus/lib/" does
	  not allow compilation correctly thsi coudl be set by configure
	  when no LD_LIBRARY_PATH was set.
	  
	  This patch makes it so when no LD_LIBRARY_PATH is set the value
	  for test linking of globus will be set to the value
	  --with-globus-lib set as rather than the value :/globus/lib/dir
	  
	  Signed-off by: Paul
	  http://rb.dcache.org/r/2305

2010-08-11 13:59  behrmann

	* dcap.spec.in: libs: Upgrade to Apache Active MQ 5.3.2
	  
	  Upgrade to version 5.3.2 from version 5.3.0. 5.3.2 is a bug fix
	  release.
	  
	  Target: trunk
	  Acked-by: Tigran Mkrtchyan <tigran.mkrtchyan@desy.de>
	  Patch: http://rb.dcache.org/r/2206/

2010-07-08 15:40  tigran

	* Makefile.am, bootstrap.sh: libdcap: do not create bunch of empty
	  files as a documentation.
	  
	  The current bootstrap.sh creates a bunch of empty files, that are
	  later
	  installed as documentation. Installing empty documentation files
	  does
	  not make sense.
	  
	  Patch: http://rb.dcache.org/r/1645
	  Acked-By: Tigran
	  Signed-off-by: Mattias Ellert

2010-07-07 13:46  pmillar

	* src/dcap.c, src/dcap_url-test.c, src/dcap_url.c, src/dcap_url.h:
	  dcap: add storage capacity of string to url2config function
	  
	  The function url2config (in dcap_url.c) populates the memory
	  pointed to by one of the arguments with
	  the configuration option that would result in the supplied dcap
	  url structure. Currently, this
	  function blindly assumes there is sufficient memory to store the
	  necessary configuration string.
	  
	  This patch adds an additional argument to the url2config
	  function: the storage capacity of the
	  string memory allocated. The ordering of the arguments have been
	  changes to be more in keeping with
	  that of snprintf. The few places where url2config is called have
	  been updated.
	  
	  This patch does not affect url2config itself, so the assumption
	  of sufficient memory continues.
	  
	  Patch: http://rb.dcache.org/r/2082/
	  Acked-by: Tigran
	  Target: trunk

2010-07-01 12:45  omsynge

	* src/dcap.h.in, src/dcap_dirent.c, src/dcap_lseek.c,
	  src/dcap_open.c, src/dcap_read.c, src/dcap_stat.c,
	  src/dcap_stream.c, src/dcap_types.h, src/dcap_write.c,
	  src/system_io.c, src/system_io.h: dcap: mostly revert patch that
	  broke dcap.
	  
	  This patch is an alternative to
	  
	  http://rb.dcache.org/r/1976/
	  
	  It reverts the code to the older revision. where the lib64
	  versions don't work.
	  acked by Tigran
	  http://rb.dcache.org/r/2033/

2010-06-11 15:39  omsynge

	* build.xml, plugins/gssapi/base64.c, plugins/gssapi/base64.h,
	  plugins/gssapi/client.c, plugins/gssapi/gssTunnel.h,
	  plugins/gssapi/server.c, plugins/gssapi/util.c,
	  plugins/gssapi/util.h, plugins/javatunnel/Args.java,
	  plugins/javatunnel/Base64.java,
	  plugins/javatunnel/Convertable.java,
	  plugins/javatunnel/NetRolesServerSocket.java,
	  plugins/javatunnel/NetRolesServerSocketCreator.java,
	  plugins/javatunnel/NetRolesSocket.java,
	  plugins/javatunnel/SSLTunnelSocket.java,
	  plugins/javatunnel/TunnelConverter.java,
	  plugins/javatunnel/TunnelInputStream.java,
	  plugins/javatunnel/TunnelOutputStream.java,
	  plugins/javatunnel/sec2.conf, plugins/ssl/sslTunnel.c,
	  plugins/ssl/user.c, plugins/telnet/README,
	  plugins/telnet/dcapPasswd.c, plugins/telnet/telnetTunnel.c,
	  plugins/telnet/user.c, src/array.c, src/array.h, src/br.c,
	  src/char2crc.c, src/currentThread.c, src/dc_check, src/dc_hack.h,
	  src/dc_job_hack.c, src/dcap_accept.c, src/dcap_accept.h,
	  src/dcap_access.c, src/dcap_ahead.c, src/dcap_ahead.h,
	  src/dcap_checksum.h, src/dcap_chmod.c, src/dcap_chown.c,
	  src/dcap_close.c, src/dcap_command.c, src/dcap_command.h,
	  src/dcap_debug.h, src/dcap_dirent.c, src/dcap_dup.c,
	  src/dcap_errno.h, src/dcap_error.c, src/dcap_error.h,
	  src/dcap_fsync.c, src/dcap_interpreter.c, src/dcap_interpreter.h,
	  src/dcap_lseek.c, src/dcap_mkdir.c, src/dcap_mqueue.c,
	  src/dcap_mqueue.h, src/dcap_nodes.h, src/dcap_open.c,
	  src/dcap_poll.c, src/dcap_poll.h, src/dcap_preload.c,
	  src/dcap_preload64.c, src/dcap_protocol.c, src/dcap_protocol.h,
	  src/dcap_reconnect.c, src/dcap_reconnect.h, src/dcap_rename.c,
	  src/dcap_shared.h, src/dcap_signal.c, src/dcap_signal.h,
	  src/dcap_stat.c, src/dcap_stream.c, src/dcap_test.c,
	  src/dcap_types.h, src/dcap_unlink.c, src/dcap_url.c,
	  src/dcap_url.h, src/dcap_write.c, src/dcsuck.c, src/dispatcher.c,
	  src/fnal_thread.c, src/gettrace.c, src/input_parser.c,
	  src/input_parser.h, src/io.c, src/io.h, src/ioTunnel.h,
	  src/lineparser.c, src/links.c, src/links.h, src/linux_trace.c,
	  src/node_plays.c, src/parser.c, src/parser.h, src/passive.c,
	  src/pnfs.c, src/pnfs.h, src/readv_test.c, src/socket_nio.c,
	  src/socket_nio.h, src/str2errno.c, src/string2stat.c,
	  src/sysdep.h, src/system_io.c, src/system_io.h: Remove all
	  trailing white space from dcap.
	  
	  
	  Just a simple sed operation
	  
	  sed -i -e 's/[ \t]*$//g
	  
	  To remove all trailing tabs and spaces.
	  
	  Signed-off by: Paul and Thomas
	  http://rb.dcache.org/r/1970/

2010-06-11 15:27  omsynge

	* configure.ac: Autotools is tragically old on SL4 so we need to
	  remove use the macro AC_STRUCT_DIRENT_D_INO which we where not
	  using yet anyway.
	  
	  Now compiles again on SL4.8
	  Signed-off by: Paul
	  http://rb.dcache.org/r/1975/

2010-06-10 15:33  omsynge

	* configure.ac, src/dcap.h.in, src/dcap_dirent.c, src/dcap_lseek.c,
	  src/dcap_open.c, src/dcap_read.c, src/dcap_stat.c,
	  src/dcap_stream.c, src/dcap_types.h, src/dcap_write.c,
	  src/system_io.c, src/system_io.h: Checking of lseek64 pread64
	  pwrite64 ftello64 fseeko64 struct dirent.dirent struct
	  dirent.dirent64 and finally off64_t
	  
	  The following functions:
	  
	  lseek64
	  pread64
	  pwrite64
	  ftello64
	  fseeko64
	  
	  and the following structures:
	  
	  struct dirent.dirent
	  struct dirent.dirent64
	  off64_t
	  
	  Do not exist on MacOS X. As on Mac the OS is now 64 bit by
	  default.
	  
	  Unfortunately this means I had to make some non 64 bit versions
	  to replace 64 bit specific code.

2010-06-07 12:08  omsynge

	* configure.ac, src/Makefile.am: Zlib scope limiting
	  
	  Zlib should only be linked to appropriate applications not
	  everything needs to be linked to zlib.
	  
	  I thought I had added this before but it just sat in an unused
	  patch that might have got lost so I add it now.
	  
	  Acked-by: Tigran
	  http://rb.dcache.org/r/1949/

2010-06-07 10:04  omsynge

	* dcap.spec.in: dcap rpm packaging bug ? Possible bug may be fixed
	  here
	  
	  Having looked here,
	  
	  http://rt.dcache.org/Ticket/Display.html?id=5624
	  
	  I believed their was a bug and the old code appeared to
	  potentially allow a bug for libdcap though I could not replicate
	  it oddly even when compiling with id testuser100.
	  
	  Acked-by: Tigran
	  http://rb.dcache.org/r/1947/

2010-06-07 08:01  tigran

	* src/dcap_version.c.in: libdcap: fix return type of dc_getPatch()
	  
	  Target: trunk
	  Patch: http://rb.dcache.org/r/1944/
	  Acked-By Gerd

2010-06-04 07:43  tigran

	* src/dcap_acl.c: libdcap: fix compiler warning on ifdef
	  
	  Target: trunk
	  Patch: http://rb.dcache.org/r/1943/
	  Acked-By: Paul

2010-05-19 09:35  tigran

	* plugins/javatunnel/Convertable.java,
	  plugins/javatunnel/GsiTunnel.java,
	  plugins/javatunnel/GssTunnel.java,
	  plugins/javatunnel/SSLTunnelSocket.java,
	  plugins/javatunnel/SelfTest.java,
	  plugins/javatunnel/TunnelConverter.java,
	  plugins/javatunnel/TunnelSocket.java,
	  plugins/javatunnel/UserBindible.java: cells: use Subject instead
	  of CellUser
	  
	  drop custom CellUser and use Subject instead.
	  cells xxStreamEngines updated to populate Subject.
	  The dcap door is updated to as well. Nevertheless
	  this is placeholder patch for further patches.
	  
	  Target: trunk
	  Patch: http://rb.dcache.org/r/1820/
	  Acked-By: Gerd

2010-05-10 14:17  tigran

	* plugins/javatunnel/GsiTunnel.java,
	  plugins/javatunnel/GssTunnel.java,
	  plugins/javatunnel/SSLTunnelSocket.java,
	  plugins/javatunnel/SelfTest.java,
	  plugins/javatunnel/TunnelConverter.java,
	  plugins/javatunnel/TunnelSocket.java,
	  plugins/javatunnel/UserBindible.java: gsitunnel: add support for
	  multiple roles
	  
	  Current tunnel picks only the first role.
	  Patch enables multiple roles in the dcap door.
	  
	  The follow-up patch have to make use of them.
	  
	  Target: trunk
	  Patch: http://rb.dcache.org/r/1484
	  Acked-By: Paul

2010-04-01 13:15  omsynge

	* configure.ac: bumping version number pre release

2010-04-01 13:04  omsynge

	* src/Makefile.am: dcap: putting linking back how it was to fix
	  preload issues.
	  
	  libpdacp was segfaulting before linking. This fixes it, by
	  returning to previous linking layout.
	  
	  Signed-off by: Paul
	  http://rb.dcache.org/r/1712/

2010-03-26 10:00  omsynge

	* configure.ac, dcache-dcap.spec.in, dcap.spec.in: packaging to
	  sort out yum repos

2010-03-25 09:17  pmillar

	* src/system_io.c: dcap: silence object-to-fn-ptr warnings when
	  compiling code
	  
	  When compiling dcap, the GCC compiler emits warnings like:
	  
	  system_io.c:231: warning: ISO C forbids conversion of object
	  pointer to function pointer type
	  
	  This is because we are converting an object pointer (returned by
	  dlsym() function), which we want to use as
	  a function pointer. This is arguably a bug in dlsym; however, we
	  need a work-around in order to silence
	  these warnings.
	  
	  The workaround is to declare a union that does the conversion.
	  This is guaranteed (ISO/IEC 9899:1990
	  "C89"/"C90") to match exactly.
	  
	  The same problem exists in at least one other file. Future patchs
	  should address further occurrences of
	  this problem.
	  
	  Target: trunk
	  Acked-by: Tigran Mkrtchyan <tigran.mkrtchyan@desy.de>
	  Patch: http://rb.dcache.org/r/1680/

2010-03-24 11:32  omsynge

	* configure.ac, plugins/ssl/Makefile.am: dcap:gsi:linking gsidcap
	  was broken due to dcap being completely linked to openssl so
	  gsiapi clashes occured
	  
	  Removes global linking to libssl
	  Use $(SSL_LIBS) rather than statically linking libssl to
	  libsslTunnel
	  Removes unneeded "export" command previously thought to be
	  required for library paths.
	  Removes now unneeded overrides to link to globus fork of libssl.
	  
	  Signed-off by: Tigran
	  http://rb.dcache.org/r/1693/

2010-03-24 11:28  omsynge

	* plugins/telnet/dcapPasswd.c: dcap compilation warnings reduction
	  missing #include
	  
	  Trivial change but removes a few warnings during compilation.
	  Signed-off by: Tigran

2010-03-23 10:59  omsynge

	* configure.ac, src/Makefile.am, src/adler32.c, src/dcap.dsp,
	  src/dcap_checksum.c, src/dcap_lib.dsp, src/dcap_read.c,
	  src/dccp.dsp, src/getopt.c: adler32.c getopt.c upsetting Red hat
	  package acceptance rules.
	  
	  Too get into to EPEL
	  
	  https://bugzilla.redhat.com/show_bug.cgi?id=549821
	  
	  We have two issues, adler32 getopt.c are not our code and
	  borrowed.
	  
	  Are resolved in this patch.
	  
	  Signed-off by: Tigran Mkrtchyan and Paul
	  http://rb.dcache.org/r/1628/

2010-03-23 10:50  omsynge

	* configure.ac: dcap: explicitly use the globus version of open ssl
	  
	  This is a minimal changes fix, so the behaviour is the same as
	  the last dynamic lib version of dcap, this explicitly uses the
	  globus version of open ssl although a different approach may be
	  needed with EPEL packaged globus testing is still required.
	  
	  Probably this can be done better but it makes gsi work properly
	  once this is done we can focus on getting the correct methods
	  detected which we will work upon in the patch,
	  http://rb.dcache.org/r/1646/
	  
	  Consider this an essential bug fix for gsidcap release for all
	  versions of globus packaged in the globus way.
	  Signed-off by: Paul
	  http://rb.dcache.org/r/1686/

2010-03-22 17:37  omsynge

	* configure.ac: Dcap - gsi - Stupid bug loosing all config for
	  linking to globus on 32 bit
	  
	  since the value was always "" the code seting up the linking of
	  globus always had no globus if GCC32PTHR globus was found in
	  addition to GCC32DBGPTHR which is normal so globus normal did not
	  work with 32 bit.
	  
	  Signed-off by: Paul
	  http://rb.dcache.org/r/1683/

2010-03-19 14:38  omsynge

	* configure.ac: bumping the release number

2010-03-19 11:54  omsynge

	* dcache-dcap.spec.in: dcap: fix "make rpm" target finding
	  unpackaged files.
	  
	  The end of the "make rpm" target breaks due to
	  
	  Checking for unpackaged file(s): /usr/lib/rpm/check-files
	  /var/tmp/dcache-dcap-root
	  error: Installed (but unpackaged) file(s) found:
	  /opt/d-cache/dcap/bin/dcap_url-test
	  
	  So I add this binary to the dcache-dcap-tests-2.??.0-0.x86_64.rpm
	  
	  Acked-by: Paul
	  http://rb.dcache.org/r/1681/

2010-03-19 11:16  omsynge

	* configure.ac: Dcap GSI detection is inconsistent in header and
	  library detection.
	  
	  Due to patch, http://rb.dcache.org/r/1646/ not detecting one to
	  the globus libraries for VDT it was observed that the "make"
	  target built the gsi tunnel but with the wrong linking and the
	  "make rpm " target failed as the gsi tunnel was not packaged in
	  the RPM.
	  
	  This was because the decision to build the gsi tunnel was based
	  upon the globus header files being present and not requiring the
	  libraries to be present also. While the packaging of the RPM for
	  the gsi tunnel depended upon the globus header files being
	  present and requiring the libraries to also contain the
	  appropriate functions.
	  
	  This patch resolves this. I use the auto tools convention or
	  "$want_opt" = yes as I intend to move over to this standard in
	  time.
	  
	  Acked-by: Jan
	  http://rb.dcache.org/r/1673/

2010-03-19 10:26  omsynge

	* configure.ac: Bumping the version number

2010-03-19 10:21  omsynge

	* src/dcap.h.in: dc_getPatch not in dcap.h so breaking 64 bit
	  support for dccp etc.
	  
	  Signed-off by: Paul
	  http://rb.dcache.org/r/1675

2010-03-18 01:25  behrmann

	* plugins/gssapi, plugins/javatunnel, plugins/ssl, plugins/telnet,
	  src/adler32.c, src/array.c, src/array.h, src/br.c,
	  src/char2crc.c, src/currentThread.c, src/dc_check, src/dc_hack.h,
	  src/dc_job_hack.c, src/dc_stage, src/dcap.c, src/dcap.def,
	  src/dcap.dsp, src/dcap.dsw, src/dcap.h.in, src/dcap_accept.c,
	  src/dcap_accept.h, src/dcap_access.c, src/dcap_ahead.c,
	  src/dcap_ahead.h, src/dcap_checksum.c, src/dcap_checksum.h,
	  src/dcap_chmod.c, src/dcap_chown.c, src/dcap_close.c,
	  src/dcap_command.c, src/dcap_command.h, src/dcap_debug.c,
	  src/dcap_debug.h, src/dcap_dirent.c, src/dcap_dup.c,
	  src/dcap_errno.h, src/dcap_error.c, src/dcap_error.h,
	  src/dcap_fsync.c, src/dcap_interpreter.c, src/dcap_interpreter.h,
	  src/dcap_lib.dsp, src/dcap_lseek.c, src/dcap_mkdir.c,
	  src/dcap_mqueue.c, src/dcap_mqueue.h, src/dcap_nodes.h,
	  src/dcap_open.c, src/dcap_poll.c, src/dcap_poll.h,
	  src/dcap_preload.c, src/dcap_preload64.c, src/dcap_protocol.c,
	  src/dcap_protocol.h, src/dcap_read.c, src/dcap_reconnect.c,
	  src/dcap_reconnect.h, src/dcap_rename.c, src/dcap_shared.h,
	  src/dcap_signal.c, src/dcap_signal.h, src/dcap_stat.c,
	  src/dcap_stream.c, src/dcap_test.c, src/dcap_test.py,
	  src/dcap_types.h, src/dcap_unix2win.c, src/dcap_unlink.c,
	  src/dcap_url.c, src/dcap_url.h, src/dcap_version.c.in,
	  src/dcap_win32.h, src/dcap_win_poll.h, src/dcap_write.c,
	  src/dccp.c, src/dccp.dsp, src/dccp_linux_directio.c,
	  src/dcsuck.c, src/debug_level.lst, src/debug_map.h,
	  src/dispatcher.c, src/fnal_thread.c, src/getopt.c,
	  src/gettrace.c, src/input_parser.c, src/input_parser.h, src/io.c,
	  src/io.h, src/ioTunnel.h, src/lineparser.c, src/links.c,
	  src/links.h, src/linux_trace.c, src/node_plays.c, src/parser.c,
	  src/parser.h, src/passive.c, src/pnfs.c, src/pnfs.h,
	  src/pydcap.i, src/reader, src/readv_test.c, src/socket_nio.c,
	  src/socket_nio.h, src/str2errno.c, src/string2stat.c,
	  src/sysdep.h, src/system_io.c, src/system_io.h,
	  src/thread_test.c, src/trace_back.h, src/tunnelManager.c,
	  src/tunnelManager.h, src/wdccp.c, src/win32_dlfcn.h,
	  src/win32_libdl.c, src/writer, src/xutil.c, src/xutil.h:
	  SpaceManager: Reverted r13690.

2010-03-17 14:24  pmillar

	* src/tests, src/tests/Makefile, src/tests/uri,
	  src/tests/uri/Makefile, src/tests/uri/dcap-bad-1.expected,
	  src/tests/uri/dcap-bad-1.src, src/tests/uri/dcap-bad-2.expected,
	  src/tests/uri/dcap-bad-2.src, src/tests/uri/dcap-good-1.expected,
	  src/tests/uri/dcap-good-1.src,
	  src/tests/uri/dcap-good-2.expected,
	  src/tests/uri/dcap-good-2.src,
	  src/tests/uri/gsidcap-good-1.expected,
	  src/tests/uri/gsidcap-good-1.src,
	  src/tests/uri/pnfs-good-1.expected,
	  src/tests/uri/pnfs-good-1.src: dcap: add test suite for dcap
	  client URL parser
	  
	  First stab at a test-suite for checking dcap's URL parser.
	  
	  Works like this: there are two types of file: foo.src and
	  foo.expected. The test framework
	  is invoked by typing "make test". This uses dcap_url-test, from
	  an earlier patch to build
	  foo.actual from foo.src and it then does a byte-wise comparison
	  between foo.actual and
	  foo.expected. If they are the same it goes onto the next file, if
	  not then the make process
	  will stop. Successful tests are recorded by touch foo.ok, so
	  repeated test-runs will skip
	  over those tests that have already passed. Doing "make clean"
	  clears all generated files.
	  
	  The Makefile in the directory modules/dcap/src/tests allows "make
	  test" to enter the listed
	  directories and do "make test" in each one. "make clean"
	  similarly cleans up.
	  
	  Target: trunk
	  
	  RB: http://rb.dcache.org/r/1650
	  Acked-by: Gerd

2010-03-16 17:31  omsynge

	* configure.ac, src/Makefile.am, src/dcap.h.in, src/dcap_acl.c,
	  src/dcap_preload.c, src/system_io.c, src/system_io.h: Dcap
	  Solaris with ACL preload support.
	  
	  Implements these autoconf functions
	  
	  AC_CHECK_FUNCS([acl])
	  AC_CHECK_FUNCS([facl])
	  AC_CHECK_FUNCS([_xstat])
	  AC_CHECK_FUNCS([_lxstat])
	  AC_CHECK_FUNCS([_fxstat])
	  
	  as posible preload targets for solaris.
	  
	  Signed-off by: Paul
	  http://rb.dcache.org/r/736/

2010-03-15 16:45  pmillar

	* src/Makefile.am, src/dcap_url-test.c, src/dcap_url.c: dcap: add /
	  enable dcap URL test program
	  
	  The dcap client library parses URLs like dcap://door/foo/bar,
	  gsidcap://gsi-door/foo/bar, pnfsid://someID. There is some code
	  to allow for testing of this parser. Unfortunately, it is hidden
	  away in some #ifdef code where it's doing good to no one.
	  
	  This patch gets this code out into the open.
	  
	  Patch is for trunk.
	  
	  RB: http://rb.dcache.org/r/1648/
	  Acked-by: Timur

2010-03-09 15:13  omsynge

	* dcache-dcap.spec.in: Adding documentation to the RPM
	  
	  %{prefix}/share/doc/@PACKAGE@-@VERSION@/COPYING.LIB
	  %{prefix}/share/doc/@PACKAGE@-@VERSION@/LICENSE

2010-03-09 14:27  omsynge

	* Makefile.am, configure.ac, dcache-dcap.spec.in, src/Makefile.am,
	  src/dcap.c, src/dcap.h.in, src/dcap_debug.c,
	  src/dcap_version.c.in, src/dccp.c, src/dccp_linux_directio.c,
	  src/wdccp.c: dcap last patch before release: version numbers
	  
	  Keeps coupling between implementation and protocol.
	  Adds the follwoign 3 API calls.
	  
	  extern const int dc_getProtocol();
	  extern const int dc_getMajor();
	  extern const int dc_getMinor();
	  
	  To check library version programatically.
	  Signed-off by: Tigran
	  http://rb.dcache.org/r/1424

2010-02-12 07:22  behrmann

	* plugins/javatunnel/GsiTunnel.java,
	  plugins/javatunnel/GssTunnel.java,
	  plugins/javatunnel/TunnelConverter.java: all: Use SLF4J API for
	  logging rather than the log4j API
	  
	  Makes migrating away from log4j simpler.
	  
	  Most of this patch is autogenerated with the following command:
	  
	  find modules
	  -name \*.java
	  -not -path modules/dCacheJUnit/\*
	  -not -path
	  modules/dCache/org/dcache/auth/gplazma/gPlazmaTester.java
	  -not -path
	  modules/dCache/org/dcache/chimera/migration/Comparator.java
	  -not -path modules/gPlazma/\*.java
	  -not -path modules/dCache/org/dcache/auth/gplazma/GPLAZMA.java
	  -not -path modules/dCache/org/dcache/auth/AuthzQueryHelper.java
	  -not -name BatchCell.java
	  -not -name Log4jWriter.java
	  -not -name Log4jShell.java
	  -not -name CellNucleus.java
	  -exec sed -r -i
	  -e 's/^import org.apache.log4j.Logger;$/import
	  org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;/'
	  -e 's/^import org.apache.log4j.\*;$/import
	  org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;/'
	  -e
	  's/org.apache.log4j.Logger.getLogger/org.slf4j.LoggerFactory.getLogger/'
	  -e 's/org.apache.log4j.Logger/org.slf4j.Logger/'
	  -e 's/Logger\.getLogger/LoggerFactory.getLogger/'
	  -e 's/log(ger)?.fatal\(/log\1.error(/'
	  -e 's/((log(ger)?|logNameSpace)\.[a-z]*) *\( *([a-zA-Z1-9]+) *(,
	  *[a-z]* *)?\)/\1(\4.toString()\5)/'
	  -e 's/_log.error\("Tried to visit null child in " \+ ourPath !=
	  null \? ourPath : "\(top\)"\);/_log.error("Tried to visit null
	  child in " + ourPath != null ? ourPath.toString() : "(top)");/'
	  {} \;
	  
	  Target: trunk
	  Acked-by: Timur Perelmutov <timur@fnal.gov>
	  Acked-by: Tigran Mkrtchyan <tigran.mkrtchyan@desy.de>
	  Patch: http://rb.dcache.org/r/1479/

2010-02-09 13:34  omsynge

	* plugins/gssapi/Makefile.am, plugins/ssl/Makefile.am,
	  plugins/telnet/Makefile.am, src/Makefile.am: dcap:autootools
	  makes "-g -O0 -fPIC" redundant so should be removed.
	  
	  Since these values are auto created by autotools their is no
	  reason to put these in the code.
	  
	  Acknowledged by Tigran
	  http://rb.dcache.org/r/1496/

2010-02-05 15:34  omsynge

	* configure.ac, plugins/gssapi/Makefile.am,
	  plugins/ssl/Makefile.am, plugins/telnet/Makefile.am,
	  src/Makefile.am: dcap:solaris: cc and ln (not gcc, or gln) do not
	  support the -pedantic -pipe compile time flags
	  
	  This patch is less important to review than the ACL preload fixes
	  for solaris.
	  
	  Compiles fine on Solaris and linux with this.
	  
	  Still need to auto detect the "-mt" flag needed to solaris c
	  linker/compiler. but if built with
	  
	  sh bootstrap.sh
	  CFLAGS=-mt ./configure
	  make
	  make install
	  
	  all works fine
	  
	  Signed-off by: Tigran
	  http://rb.dcache.org/r/1468/

2010-01-28 16:32  omsynge

	* configure.ac, src/Makefile.am: solaris CC does not understand
	  -Wall flag
	  
	  Seeing that solaris "cc" does not understand -Wall as solaris
	  "gcc" does, we need to check that we are using gcc before
	  applying the -Wall flag.
	  
	  See here for bug
	  
	  http://svn.dcache.org/build/job/dcap-build/./label=solaris/5/changes
	  
	  This is lower priority than preload support for solaris since all
	  builds fine with gcc.
	  
	  Signed-off by: Tigran
	  http://rb.dcache.org/r/1455/

2010-01-28 11:09  omsynge

	* Makefile.am, configure.ac, dcache-dcap.spec.in,
	  plugins/Makefile.am: check for openssl and only build tunnel if
	  present
	  
	  Autodetect the presence of open ssl development files and select
	  to build this tunnel based upon this. Uses identical method to
	  krb5 detection.
	  Acked-by: Tigran Mkrtchyan
	  http://rb.dcache.org/r/1454/

2010-01-22 15:16  omsynge

	* configure.ac, dcache-dcap.spec.in, plugins/Makefile.am,
	  plugins/gssapi/Makefile.am, plugins/gssapi/Makefile.gss-ia64,
	  plugins/ssl/Makefile, plugins/ssl/Makefile.am,
	  plugins/telnet/Makefile.am, src/Makefile.am, src/dcap_version.c,
	  src/dcap_version.c.in: dcap: library version names + extras
	  
	  The new autotools version of the dcap Makefiles does not
	  propagate the library version to the library filenames the way
	  the old plain Makefiles did. This patch fixes this issue.
	  
	  It also fixes some issues with undefined symbols due to missing
	  libraries in the linking.
	  
	  
	  Committing on behalf of: Mattias Ellert
	  Signed-off by: Owen
	  http://rb.dcache.org/r/1413/

2010-01-21 16:45  omsynge

	* src/dcap.h.in, src/dcap_preload.c: stat library conflicts with
	  the preloading library so should be removed here.
	  
	  on linux this is not needed but on a Solaris SunOS 5.10, these
	  calls to stat cause compiling issues as the identifiers are
	  already defined.
	  
	  Signed-off by: Paul
	  http://rb.dcache.org/r/1367/

2010-01-21 16:39  omsynge

	* plugins/gssapi/Makefile.am, plugins/telnet/Makefile.am,
	  src/Makefile.am: Sort out dcap library symlinks.
	  
	  Mattias Ellert suggested this was some thing that needed fixing,
	  
	  He had set the library symlinks to version 1 for ABI
	  compatibility in debain so I followed his advice and stuck with
	  the same number.
	  I also followed his advice and removed the symlinks from the
	  plugins.
	  
	  I still feel we should look at the versioning here in the long
	  term. libtool versioning is some what confusing. So for now I
	  left it as a hard coded default.
	  
	  http://www.gnu.org/software/libtool/manual/html_node/Libtool-versioning.html#Libtool-versioning
	  
	  Signed-off by: Paul Millar
	  http://rb.dcache.org/r/1360/

2010-01-21 07:59  tigran

	* plugins/ssl/user.c, plugins/telnet/user.c, src/dcap_error.c:
	  libdcap: Spelling fixes
	  
	  Signed-off-by: Mattias Ellert <mattias.ellert@fysast.uu.se>
	  Target: trunk
	  Patch: http://rb.dcache.org/r/1333/

2010-01-12 10:49  omsynge

	* configure.ac: BUG FIX : ./configure with no prefix set the prefix
	  to NONE for install docs.
	  
	  Since we had to back port to support old versions of autoconf as
	  in RHEL and SL5 we had to set our own prefix handling.
	  
	  This was all fine but since autoconf defines ${prefix} as NONE if
	  not set and it then gets evaluated later, automake used the
	  templated value not the evaluated value of "/usr/local", all
	  worked as expected when --prefix was set.
	  
	  This fixes that bug.
	  
	  Signed-off by: Paul
	  http://rb.dcache.org/r/1371

2010-01-11 14:55  omsynge

	* configure.ac: Fix linking on Solaris for nsl and socket
	  
	  Methods like bind and gethostbyname are not in the standard C
	  libraries on Solaris rather gethostbyname is in nsl and bind is
	  in socket. This fixes the conditional compiling issues caused by
	  this different behavior.
	  
	  Signed-off by: Tigran Mkrtchyan
	  http://rb.dcache.org/r/1368/

2010-01-08 14:41  omsynge

	* configure.ac, src/dcap.c: AC_C_BIGENDIAN to test endian with
	  autoconf
	  
	  Suggested by Mattias Ellert.
	  
	  On checking older versions of AC_C_BIGENDIAN (pre Autoconf 2.63)
	  got confused with universal binary on AIX power PC and did not
	  report 1 or 0 on such platforms hence the extra check.
	  
	  Signed-off by: Tigran
	  http://rb.dcache.org/r/1363/

2010-01-08 14:37  tigran

	* plugins/gssapi/gssIoTunnel.c: gssTunnel: ensure that all
	  encrypted data is sent
	  
	  fix for a potential ( or real at IN2P3 ) problem with truncated
	  records.
	  
	  Acked-By: Paul
	  Patch: http://rb.dcache.org/r/1361/
	  Target: trunk

2010-01-08 13:20  omsynge

	* Makefile.am, configure.ac, dcache-dcap.spec.in, src/Makefile.am:
	  --docdir=DIR documentation root [DATAROOTDIR/doc/PACKAGE] is not
	  in autoconf 2.59-12 so had to revert/fix r/1335
	  
	  The Patch http://rb.dcache.org/r/1335 both fixed make install not
	  honouring the prefix set at configure stage, and changed the
	  target, for documentation to the standard prefix.
	  
	  unfortunately this did not work on SL5 as the version of autoconf
	  provided with SL5 does not support --docdir=
	  
	  Signed-off by: Paul
	  http://rb.dcache.org/r/1352/

2010-01-08 09:24  tigran

	* configure.ac, src/dcap.c, src/dcap_shared.h, src/dcap_stream.c:
	  dcap: opensolaris port for libdcap
	  
	  adjusted to opensolaris specific
	  
	  Acked-by: Paul
	  Patch: http://rb.dcache.org/r/1351/
	  Target: trunk

2010-01-07 16:52  omsynge

	* Makefile.am, configure.ac, dcache-dcap.spec.in, src/Makefile.am:
	  fixed a bug with make install (prefix not being honoured for doc
	  files) leading to a simplification in the code and using more
	  standard targets.
	  
	  Eamonn Kenny reported an error here
	  
	  http://etics-repository.cern.ch:8080/repository/reports/id/3ed2ca2e-1ca7-4d60-9970-33d9d370da43/sl5_x86_64_gcc412/-/reports/reportModuleDetail-dcache-dcap-dcache-dcap%20v.%201.9.3-0.html
	  
	  that "make install" was failing to correctly honour "configure
	  --prefix=what-you-like"
	  
	  this caused an issue with the doc files, so I fixed this with
	  this patch, which migrated documentation files to the standard
	  prefix.
	  
	  Signed-off by: Tigran Paul
	  http://rb.dcache.org/r/1335

2010-01-07 15:29  omsynge

	* configure.ac: Solaris standard globus packages does only includes
	  the debug versions of globus, so I added auto detection.
	  
	  Adding more types of globus for auto detection.
	  
	  Signed-off by: Paul Millar
	  http://rb.dcache.org/r/1316

2010-01-07 15:23  omsynge

	* configure.ac, src/Makefile.am: Reinstate per platform preload
	  calling functions
	  
	  AC_CANONICAL_SYSTEM is used to detect the platform. Then if
	  platform is known preload is enabled. Each platform can override
	  the default preload functions to call the preload methods.
	  
	  Benifits:
	  
	  a) Less rubbish on the command line while compiling.
	  b) Each platforms preload calls can be specified in a clear way
	  in a single file without too much extras.
	  c) Since preloads have defaults only the things that differ on a
	  per platform basis need to be specified.
	  d) Restores the functionality of the per OS Make files in a
	  single configure script.
	  
	  Things to consider:
	  
	  Maybe each of the functions selected for each platform should be
	  tested if they exist.
	  
	  
	  Acked-by: Tigran
	  http://rb.dcache.org/r/1291/

2010-01-07 15:16  omsynge

	* plugins/gssapi/server.c, src/dcap.c, src/dcap_dirent.c,
	  src/dcap_poll.c, src/dcap_read.c, src/dcap_stat.c,
	  src/dcap_stream.c, src/dcap_write.c, src/dccp.c,
	  src/dccp_linux_directio.c, src/dcsuck.c, src/gettrace.c,
	  src/links.c, src/xutil.c: Patch by Mattias Ellert
	  The dcap library code needs porting for:
	  GNU/Hurd
	  GNU/kFreeBSD
	  Linux on armel, hppa, s390, avr32 and sh4 processors
	  
	  This submitted patch was originally made for the dcap tag
	  tags/dcap-1.9.3-7, and backported to trunk.
	  
	  Acked-by: Tigran and Owen
	  http://rb.dcache.org/r/1334

2010-01-07 10:57  omsynge

	* configure.ac, src/dcap_poll.c, src/dcap_signal.c: patch for dcap
	  stropts on f11.
	  
	  To allow it to compile on Fedora11 that does not have stropts.h
	  file.
	  This patch has now been updated to be auto tools friendly.
	  not sure stropts is needed on any platform but better to detect
	  it and include rather than error if not present.
	  
	  Acked-by: Tigran
	  http://rb.dcache.org/r/1018/

2009-12-18 16:29  omsynge

	* security_plugins: rubbish left over from move

2009-12-18 16:24  omsynge

	* Makefile.am, Makefile.sgi, Makefile.w32, adler32.c, array.c,
	  array.h, br.c, char2crc.c, configure.ac, currentThread.c,
	  dc_check, dc_hack.h, dc_job_hack.c, dc_stage, dcap.c, dcap.def,
	  dcap.dsp, dcap.dsw, dcap.h.in, dcap_accept.c, dcap_accept.h,
	  dcap_access.c, dcap_ahead.c, dcap_ahead.h, dcap_checksum.c,
	  dcap_checksum.h, dcap_chmod.c, dcap_chown.c, dcap_close.c,
	  dcap_command.c, dcap_command.h, dcap_debug.c, dcap_debug.h,
	  dcap_dirent.c, dcap_dup.c, dcap_errno.h, dcap_error.c,
	  dcap_error.h, dcap_fsync.c, dcap_interpreter.c,
	  dcap_interpreter.h, dcap_lib.dsp, dcap_lseek.c, dcap_mkdir.c,
	  dcap_mqueue.c, dcap_mqueue.h, dcap_nodes.h, dcap_open.c,
	  dcap_poll.c, dcap_poll.h, dcap_preload.c, dcap_preload64.c,
	  dcap_protocol.c, dcap_protocol.h, dcap_read.c, dcap_reconnect.c,
	  dcap_reconnect.h, dcap_rename.c, dcap_shared.h, dcap_signal.c,
	  dcap_signal.h, dcap_stat.c, dcap_stream.c, dcap_test.c,
	  dcap_test.py, dcap_types.h, dcap_unix2win.c, dcap_unlink.c,
	  dcap_url.c, dcap_url.h, dcap_version.c, dcap_win32.h,
	  dcap_win_poll.h, dcap_write.c, dccp.c, dccp.dsp,
	  dccp_linux_directio.c, dcsuck.c, debug_level.lst, debug_map.h,
	  dispatcher.c, fnal_thread.c, getopt.c, gettrace.c,
	  input_parser.c, input_parser.h, io.c, io.h, ioTunnel.h,
	  lineparser.c, links.c, links.h, linux_trace.c, mkdirs.sh,
	  mkmapfile.sh, node_plays.c, parser.c, parser.h, passive.c,
	  plugins, plugins/Makefile.am, plugins/gssapi, plugins/javatunnel,
	  plugins/ssl, plugins/telnet, pnfs.c, pnfs.h, pydcap.i, reader,
	  readv_test.c, report.awk, security_plugins/gssapi,
	  security_plugins/javatunnel, security_plugins/ssl,
	  security_plugins/telnet, socket_nio.c, socket_nio.h, src,
	  src/Makefile.am, src/adler32.c, src/array.c, src/array.h,
	  src/br.c, src/char2crc.c, src/currentThread.c, src/dc_check,
	  src/dc_hack.h, src/dc_job_hack.c, src/dc_stage, src/dcap.c,
	  src/dcap.def, src/dcap.dsp, src/dcap.dsw, src/dcap.h.in,
	  src/dcap_accept.c, src/dcap_accept.h, src/dcap_access.c,
	  src/dcap_ahead.c, src/dcap_ahead.h, src/dcap_checksum.c,
	  src/dcap_checksum.h, src/dcap_chmod.c, src/dcap_chown.c,
	  src/dcap_close.c, src/dcap_command.c, src/dcap_command.h,
	  src/dcap_debug.c, src/dcap_debug.h, src/dcap_dirent.c,
	  src/dcap_dup.c, src/dcap_errno.h, src/dcap_error.c,
	  src/dcap_error.h, src/dcap_fsync.c, src/dcap_interpreter.c,
	  src/dcap_interpreter.h, src/dcap_lib.dsp, src/dcap_lseek.c,
	  src/dcap_mkdir.c, src/dcap_mqueue.c, src/dcap_mqueue.h,
	  src/dcap_nodes.h, src/dcap_open.c, src/dcap_poll.c,
	  src/dcap_poll.h, src/dcap_preload.c, src/dcap_preload64.c,
	  src/dcap_protocol.c, src/dcap_protocol.h, src/dcap_read.c,
	  src/dcap_reconnect.c, src/dcap_reconnect.h, src/dcap_rename.c,
	  src/dcap_shared.h, src/dcap_signal.c, src/dcap_signal.h,
	  src/dcap_stat.c, src/dcap_stream.c, src/dcap_test.c,
	  src/dcap_test.py, src/dcap_types.h, src/dcap_unix2win.c,
	  src/dcap_unlink.c, src/dcap_url.c, src/dcap_url.h,
	  src/dcap_version.c, src/dcap_win32.h, src/dcap_win_poll.h,
	  src/dcap_write.c, src/dccp.c, src/dccp.dsp,
	  src/dccp_linux_directio.c, src/dcsuck.c, src/debug_level.lst,
	  src/debug_map.h, src/dispatcher.c, src/fnal_thread.c,
	  src/getopt.c, src/gettrace.c, src/input_parser.c,
	  src/input_parser.h, src/io.c, src/io.h, src/ioTunnel.h,
	  src/lineparser.c, src/links.c, src/links.h, src/linux_trace.c,
	  src/node_plays.c, src/parser.c, src/parser.h, src/passive.c,
	  src/pnfs.c, src/pnfs.h, src/pydcap.i, src/reader,
	  src/readv_test.c, src/socket_nio.c, src/socket_nio.h,
	  src/str2errno.c, src/string2stat.c, src/sysdep.h,
	  src/system_io.c, src/system_io.h, src/thread_test.c,
	  src/trace_back.h, src/tunnelManager.c, src/tunnelManager.h,
	  src/wdccp.c, src/win32_dlfcn.h, src/win32_libdl.c, src/writer,
	  src/xutil.c, src/xutil.h, str2errno.c, string2stat.c, sysdep.h,
	  system_io.c, system_io.h, thread_test.c, trace_back.h,
	  tunnelManager.c, tunnelManager.h, version.sh, wdccp.c,
	  win32_dlfcn.h, win32_libdl.c, writer, xutil.c, xutil.h: Move dcap
	  to standard GNU layout
	  
	  Move src into src directory and move plugins into plugins
	  deirectory and adjust auto tools to cope with this.
	  http://rb.dcache.org/r/1271
	  signed off by Paul

2009-12-14 11:20  omsynge

	* Makefile, Makefile.aix, Makefile.alpha, Makefile.am,
	  Makefile.inc, Makefile.linux, Makefile.sgi, Makefile.sun,
	  Makefile.w32, bootstrap.sh, config, configure.ac,
	  dcache-dcap.spec, dcache-dcap.spec.in, dcap_version.c,
	  debug_map.h, security_plugins/Makefile.am,
	  security_plugins/gssapi/Makefile,
	  security_plugins/gssapi/Makefile.am,
	  security_plugins/gssapi/Makefile.gsi,
	  security_plugins/gssapi/Makefile.gsi-ia64,
	  security_plugins/gssapi/Makefile.gss,
	  security_plugins/telnet/Makefile,
	  security_plugins/telnet/Makefile.am: autotools comes to dcap
	  
	  
	  RB cant display like the empty directory "config" that should be
	  made in the source directory.
	  
	  Some issues are not addressed in this patch which maybe should.
	  These include;
	  Getting the version number from SVN not CVS.
	  Autoguessing the paths for --with-globus-lib[=DIR]
	  --with-globus-include[=DIR]
	  Building rpms when --with-globus-include and --with-globus-lib
	  are not specified.
	  Library symbolic links having the version number.
	  removing the ant target for dcap.
	  Why are #defines on the command line for compilation.
	  
	  So with these serious issues not resolved why did I not make
	  these changes. Well the ant stuff is needed already, and its a
	  different subject and in my opinion should be in a different
	  patch that I haven't made yet. The #define issue is left to try
	  to minimize the differences in compilation till a later patch.
	  The other issues are all enhancements to what we have currently
	  and I feel are more incremental and I shoudl like to get them in
	  for follow up patches. Other issues will be addressed in a soon
	  to follow (after this is committed is a source code
	  reorganization into a standard GNU source code layout)
	  
	  
	  signed off by tigran
	  http://rb.dcache.org/r/1191/

2009-12-08 08:26  tigran

	* dcap_command.c: dcap: decrease debug level to info for all error
	  messages from the door
	  
	  It's the responsibility of caller to handle error situations.
	  
	  
	  Target: trunk
	  Acked-By: Irina
	  Patch: http://rb.dcache.org/r/1183/

2009-11-12 16:06  omsynge

	* dcap.spec: This is just confusing and gets in the way casuing the
	  error'error: line 249: second %prep'

2009-11-12 16:02  omsynge

	* dcache-dcap.spec: bumping the version number for Xrc

2009-11-12 14:21  omsynge

	* dcache-dcap.spec: Fix to include path for
	  libdcap-tunnel-gsi-1.9.3-6.x86_64.rpm compilation against EPEL
	  
	  The main change is the fix to the include path, bypassing the
	  short cuts in the Make file.
	  
	  The make file could be simplified, (since I am bias toward the
	  EPEL distribution rather than VDT globus) but then the autotools
	  port is coming and so this is a for now solution requiring
	  minimal changes.
	  
	  While doing this I also included removing some Obsoletes, since
	  although all these packages do Obsolete the old name, since the
	  dcap package provides as well as obsoletes, it can cause issues
	  with
	  
	  yum groupinstall glite-UI
	  
	  when you want your rpms installed then do an upgrade. As some
	  times the libs declare that they obsolete the dcap binary rpm.
	  This is the sort of thing that should not happen and I assume its
	  a multi arch yum bug as it does not occur with sl5 i386 but that
	  could be because "groupinstall" is not set up.
	  
	  Signed-off by: No one
	  http://rb.dcache.org/r/1033/

2009-10-23 10:55  omsynge

	* dcap.c, dcap_version.c: reverting old patch untill abiguity is
	  removed

2009-10-21 12:37  omsynge

	* dcache-dcap.spec, dcap_version.c: Update of version numbers to
	  avoid conflicts

2009-10-21 12:27  omsynge

	* dcache-dcap.spec: Provides dcap
	  
	  Add an extra provides field. Needed as since one provides
	  overrides auto created provide of the same name as RPM, at least
	  from yums perspective.
	  
	  This is needed to avoid conflicts between our YUM repo and CERN's
	  yum repo while cern has not upgraded to new packaging.
	  
	  Signed-off by: Paul
	  http://rb.dcache.org/r/943/

2009-10-20 12:43  omsynge

	* dcap_version.c: Setting code version to match package version

2009-10-20 12:29  omsynge

	* dcache-dcap.spec: changing release number for next RC candidates

2009-10-20 12:13  tigran

	* dcap.c: libdcap: steer client active/passive mode by environment
	  variable
	  
	  typical grid site has a firewall between WN and SE. That's why
	  ROOT's TDcacheFile turns client into active mode. Nevertheless
	  some users still want client to stay in passive mode.
	  
	  To keep client backward compatible:
	  
	  if DCACHE_CLIENT_ACTIVE not set, then behavior is
	  controlled by library call;
	  
	  if DCACHE_CLIENT_ACTIVE environment and it's equal to 'false',
	  then client in passive mode. Any other value of will turn into
	  active more
	  
	  Target: trunk
	  Ticket: #5171
	  BUG: #259
	  Acked-by: Owen
	  Patch: http://rb.dcache.org/r/897/

2009-10-16 10:16  omsynge

	* dcache-dcap.spec: add Obsoletes: dcache-dcap in new dcap
	  packaging spec files.
	  
	  This change makes the new form of packaging dcap replace the old
	  form of packaging dcap smoothly on upgrade for non glite sites.
	  
	  This will make life easier for sites like NAF etc. This will not
	  be an issue for glite sites as this is done at the metapackage
	  level.
	  
	  Signed-off by: Tigran
	  http://rb.dcache.org/r/892/

2009-10-13 21:52  podstvkv

	* dcache-dcap.spec: Make the build for gsi and kerberos tunnels
	  optional, controlled with
	  rpmbuild arguments:
	  
	  rpmbuild -bb dcache-dcap.spec --with epel --with krb
	  or
	  rpmbuild -bb dcache-dcap.spec --with vdt
	  or just
	  rpmbuild -bb dcache-dcap.spec
	  
	  http://rb.dcache.org/r/874/
	  Signed-off by: Timur

2009-09-30 21:22  sekhri

	* dcap_close.c: TWO environment variables in dcap lib.
	  DCACHE_CLOSE_TIMEOUT and DCACHE_CLOSE_TIMEOUT_OVERRIDE. If
	  command line argument is present, then DCACHE_CLOSE_TIMEOUT is
	  ignored. If DCACHE_CLOSE_TIMEOUT_OVERRIDE is present then both
	  command line argument and DCACHE_CLOSE_TIMEOUT are overridden.
	  
	  Here is the behaviour of dcap library
	  
	  
	  a) Provided -C option and no env variable
	  It used -C value
	  b) Provided -C option with wrong value like "abc" and no env
	  variable
	  It used default value
	  c) Provided -C option with DCACHE_CLOSE_TIMEOUT_DEFAULT variable
	  It honored -C option and bypassed the env variable
	  d) Provided -C option with DCACHE_CLOSE_TIMEOUT_DEFAULT variable
	  with wrong value
	  It honored -C option and bypassed the env variable
	  e) Provided -C option with wrong value with
	  DCACHE_CLOSE_TIMEOUT_DEFAULT variable
	  It used default value
	  f) Provided DCACHE_CLOSE_TIMEOUT_DEFAULT variable
	  It used this env variable value
	  g) Provided DCACHE_CLOSE_TIMEOUT_DEFAULT variable with wrong
	  value
	  It used default value
	  h) Provided DCACHE_CLOSE_TIMEOUT_DEFAULT variable and
	  DCACHE_CLOSE_TIMEOUT_OVERRIDE variable
	  It used DCACHE_CLOSE_TIMEOUT_OVERRIDE env variable value
	  i) Provided DCACHE_CLOSE_TIMEOUT_DEFAULT variable with wrong
	  value and DCACHE_CLOSE_TIMEOUT_OVERRIDE variable
	  It used DCACHE_CLOSE_TIMEOUT_OVERRIDE env variable value
	  j) Provided DCACHE_CLOSE_TIMEOUT_DEFAULT variable and
	  DCACHE_CLOSE_TIMEOUT_OVERRIDE variable with wrong value
	  It used DCACHE_CLOSE_TIMEOUT_DEFAULT value
	  k) Provided DCACHE_CLOSE_TIMEOUT_DEFAULT variable with wrong
	  value and DCACHE_CLOSE_TIMEOUT_OVERRIDE variable with wrong value
	  It used default value
	  l) Provided -C option with DCACHE_CLOSE_TIMEOUT_OVERRIDE variable
	  It used DCACHE_CLOSE_TIMEOUT_OVERRIDE env variable value
	  m) Provided -C option with DCACHE_CLOSE_TIMEOUT_OVERRIDE variable
	  with wrong value
	  It used -C value
	  n) Provided -C option with wrong value and
	  DCACHE_CLOSE_TIMEOUT_OVERRIDE variable with wrong value
	  It used default value
	  o) Provided -C option with DCACHE_CLOSE_TIMEOUT_DEFAULT variable
	  and DCACHE_CLOSE_TIMEOUT_OVERRIDE variable
	  It used DCACHE_CLOSE_TIMEOUT_OVERRIDE value
	  p) Provided -C option with DCACHE_CLOSE_TIMEOUT_DEFAULT variable
	  and DCACHE_CLOSE_TIMEOUT_OVERRIDE variable with wrong value
	  It used -C value
	  q) Provided -C option with DCACHE_CLOSE_TIMEOUT_DEFAULT variable
	  with wrong value and DCACHE_CLOSE_TIMEOUT_OVERRIDE variable with
	  wrong value
	  It used -C value
	  r) Provided -C option with wrong value and
	  DCACHE_CLOSE_TIMEOUT_DEFAULT variable with wrong value and
	  DCACHE_CLOSE_TIMEOUT_OVERRIDE variable with wrong value
	  It used default value
	  s) Provided -C option with wrong value and
	  DCACHE_CLOSE_TIMEOUT_DEFAULT variable and
	  DCACHE_CLOSE_TIMEOUT_OVERRIDE variable with wrong value
	  It used default value
	  
	  
	  Signed-off by: Vladimir
	  http://rb.dcache.org/r/801

2009-09-30 21:19  sekhri

	* dcap_close.c: TWO environment variables in dcap lib.
	  DCACHE_CLOSE_TIMEOUT and DCACHE_CLOSE_TIMEOUT_OVERRIDE. If
	  command line argument is present, then DCACHE_CLOSE_TIMEOUT is
	  ignored. If DCACHE_CLOSE_TIMEOUT_OVERRIDE is present then both
	  command line argument and DCACHE_CLOSE_TIMEOUT are overridden.
	  
	  Here is the behaviour of dcap library
	  
	  
	  a) Provided -C option and no env variable
	  It used -C value
	  b) Provided -C option with wrong value like "abc" and no env
	  variable
	  It used default value
	  c) Provided -C option with DCACHE_CLOSE_TIMEOUT_DEFAULT variable
	  It honored -C option and bypassed the env variable
	  d) Provided -C option with DCACHE_CLOSE_TIMEOUT_DEFAULT variable
	  with wrong value
	  It honored -C option and bypassed the env variable
	  e) Provided -C option with wrong value with
	  DCACHE_CLOSE_TIMEOUT_DEFAULT variable
	  It used default value
	  f) Provided DCACHE_CLOSE_TIMEOUT_DEFAULT variable
	  It used this env variable value
	  g) Provided DCACHE_CLOSE_TIMEOUT_DEFAULT variable with wrong
	  value
	  It used default value
	  h) Provided DCACHE_CLOSE_TIMEOUT_DEFAULT variable and
	  DCACHE_CLOSE_TIMEOUT_OVERRIDE variable
	  It used DCACHE_CLOSE_TIMEOUT_OVERRIDE env variable value
	  i) Provided DCACHE_CLOSE_TIMEOUT_DEFAULT variable with wrong
	  value and DCACHE_CLOSE_TIMEOUT_OVERRIDE variable
	  It used DCACHE_CLOSE_TIMEOUT_OVERRIDE env variable value
	  j) Provided DCACHE_CLOSE_TIMEOUT_DEFAULT variable and
	  DCACHE_CLOSE_TIMEOUT_OVERRIDE variable with wrong value
	  It used DCACHE_CLOSE_TIMEOUT_DEFAULT value
	  k) Provided DCACHE_CLOSE_TIMEOUT_DEFAULT variable with wrong
	  value and DCACHE_CLOSE_TIMEOUT_OVERRIDE variable with wrong value
	  It used default value
	  l) Provided -C option with DCACHE_CLOSE_TIMEOUT_OVERRIDE variable
	  It used DCACHE_CLOSE_TIMEOUT_OVERRIDE env variable value
	  m) Provided -C option with DCACHE_CLOSE_TIMEOUT_OVERRIDE variable
	  with wrong value
	  It used -C value
	  n) Provided -C option with wrong value and
	  DCACHE_CLOSE_TIMEOUT_OVERRIDE variable with wrong value
	  It used default value
	  o) Provided -C option with DCACHE_CLOSE_TIMEOUT_DEFAULT variable
	  and DCACHE_CLOSE_TIMEOUT_OVERRIDE variable
	  It used DCACHE_CLOSE_TIMEOUT_OVERRIDE value
	  p) Provided -C option with DCACHE_CLOSE_TIMEOUT_DEFAULT variable
	  and DCACHE_CLOSE_TIMEOUT_OVERRIDE variable with wrong value
	  It used -C value
	  q) Provided -C option with DCACHE_CLOSE_TIMEOUT_DEFAULT variable
	  with wrong value and DCACHE_CLOSE_TIMEOUT_OVERRIDE variable with
	  wrong value
	  It used -C value
	  r) Provided -C option with wrong value and
	  DCACHE_CLOSE_TIMEOUT_DEFAULT variable with wrong value and
	  DCACHE_CLOSE_TIMEOUT_OVERRIDE variable with wrong value
	  It used default value
	  s) Provided -C option with wrong value and
	  DCACHE_CLOSE_TIMEOUT_DEFAULT variable and
	  DCACHE_CLOSE_TIMEOUT_OVERRIDE variable with wrong value
	  It used default value
	  
	  
	  Signed-off by: Vladimir
	  http://rb.dcache.org/r/801

2009-09-25 14:48  omsynge

	* dcache-dcap.spec: Added openssl-devel to the build required
	  packages on the spec file.
	  
	  Adding the following line gives end users a clear rpm name to
	  install before build can work.
	  
	  BuildRequires: openssl-devel
	  
	  New patch clarifying which sub packages have which codependencies
	  as Tigran requested.
	  
	  http://rb.dcache.org/r/767/
	  acc Tigran Mkrtchyan

2009-09-22 12:58  omsynge

	* dcache-dcap.spec, security_plugins/gssapi/Makefile.gss,
	  security_plugins/gssapi/tunnelQueue.h,
	  security_plugins/telnet/Makefile: Making Krb-v5 and telnet
	  tunnels in standard dcap rpm
	  
	  Patch http://rb.dcache.org/r/760/
	  
	  modules/dcap/dcache-dcap.spec :
	  
	  Added two new sub packages to this spec file.
	  
	  modules/dcap/security_plugins/gssapi/tunnelQueue.h :
	  
	  Simple addition of a header file to allow compilation. (may
	  conflict with other pending patches as this is needed)
	  
	  modules/dcap/security_plugins/gssapi/Makefile.gss :
	  
	  Some small changes to this Makefile essentially to support 64 bit
	  and "install" target.
	  
	  modules/dcap/security_plugins/telnet/Makefile :
	  
	  Some small changes to this Makefile essentially to support 64 bit
	  and "install" target.
	  Some small effort to make more like other Make files.
	  
	  Committing on behalf of: Owen
	  Signed-off by: Tigran

2009-09-17 15:26  podstvkv

	* dcap.h.in, dcap_close.c, dccp.c: Introduce a new parameter for
	  'dccp' to set the timeout for file close
	  operation. If the parameter is not set the old default value is
	  used.
	  
	  Signed-off by: Tigran
	  http://rb.dcache.org/r/744/

2009-09-11 16:01  omsynge

	* Makefile, dcache-dcap.spec, security_plugins/gssapi/Makefile:
	  dcap - This patch is a repackaging of dcachedcap, the changes are
	  related to two files the spec file and the gsitunnels main
	  Makefile.
	  
	  This patch is a repackaging of dcachedcap, the changes are
	  related to two files the spec file and the gsitunnels main
	  Makefile.
	  
	  Renamed the devel package to libdcachedcap-devel as this is
	  better consistent with libdcachedcap.
	  Added libdcachedcapgsi package for the gsi plugin.
	  Added "make clean" to the building process in case the globing of
	  the source included build artifacts.
	  Added the concepts of ARCH and FLAVOR to the linking process.
	  Added the targets dist rpm install bindist to the Makefile for
	  the gsi tunnel.
	  
	  ARCH is required to differentiate between 64 bit and 32 bit
	  architectures of globus libraries.
	  FLAVOR is required to make things compatible to EPEL packaged
	  unflavored globus.
	  
	  
	  Signed-off by: Owen
	  http://rb.dcache.org/r/703/

2009-09-08 14:05  omsynge

	* dcache-dcap.spec: bumping version number

2009-08-28 08:48  tigran

	* security_plugins/javatunnel/GsiTunnel.java,
	  security_plugins/javatunnel/GssTunnel.java,
	  security_plugins/javatunnel/TunnelConverter.java,
	  security_plugins/javatunnel/TunnelInputStream.java: dcap: gsi:
	  fix voms role handlig
	  
	  this is a fix for misinterpretation of VO, VO group
	  and VO role between dcap and gplazma.
	  
	  The patch includes a simple fix with some cleanups.
	  A patch for switching to Subject with more cleanups
	  will follow.
	  
	  Target: trunk, 1.9.4, 1.9.3, 1.9.2
	  Acked-by: Paul
	  Ached-By: Jan
	  Patch: http://rb.dcache.org/r/638/

2009-08-25 14:05  omsynge

	* dcap_preload.c: I commited this modification to trunk in error
	  and should have been done to a branch

2009-08-25 13:15  omsynge

	* dcap_preload.c: Added methods
	  _xstat
	  _lxstat
	  _fxstat

2009-07-27 14:20  omsynge

	* dcache-dcap.spec: bumping version number for internal release

2009-07-22 16:04  omsynge

	* Makefile, dcache-dcap.spec: r440 - Make Dcap packaging better

2009-07-10 10:55  omsynge

	* Makefile.sun: Added flags to make dcap compatable with solaris
	  10.

2009-06-05 14:20  tigran

	* dcap_read.c: libdcap: initialize readvmsg
	  
	  if count value of dcap_readv2 call is zero, then we will try to
	  free
	  some memory pointed by uninitialized variable.
	  
	  This patch initializes it to NULL.
	  
	  Acked-By: Paul

2009-06-05 13:36  tigran

	* dcap.c: libdcap: fix htoll converions
	  
	  after compiling the old code with -O2 option htoll function was
	  returning wrong result.
	  
	  Acked-by: Paul
	  Target: trunk

2009-06-05 12:52  tigran

	* dcap_checksum.c: libdcap: disable unused code
	  
	  keep compiler happy
	  
	  Acked-by: Paul
	  Target: trunk

2009-05-29 08:43  tigran

	* security_plugins/javatunnel/GsiTunnel.java: make use of gPlazma
	  utilities to extract VO group and role in gsidcap
	  
	  without this patch we may run 67 gsidcap clients with 512MB heap
	  size
	  With this patch we may run 132 which is equal to what get with
	  1.9.0-11.
	  Nevertheless with truk and 1.9.0 I get different types of
	  OutOfMemory:
	  
	  trunk: OutOfMemoryError: GC overhead limit exceeded
	  1.9.0: OutOfMemoryError: Java heap space
	  
	  RT: http://www.dcache.org/rt/Ticket/Display.html?id=4527
	  Ached-by: Ted

2009-02-13 22:57  tdh

	* security_plugins/javatunnel/GsiTunnel.java: Changes package names
	  to be compatible with new glite voms api jar. Always uses
	  /etc/grid-security/certificates, never
	  /etc/grid-security/vomsdir, for the truststore. The truststore is
	  not actually used, because valiadtion is not done.
	  
	  This code needs to be reworked using the gPlazma X509CertUtils
	  class, which has support for voms attribute validation. In
	  addition, the current code uses only the first voms attribute,
	  which is inconsistent with gPlazma authorization, which uses each
	  attribute.

2009-02-11 08:52  tigran

	* Makefile: refactored build system
	  
	  compile junit tests when rest of the code copiled
	  ability to run single unit test
	  -Dtestcase=.....
	  dcache-srm.jar and dcache-replica.jar merged into dcache.jar
	  allowes to add specific patch level by defining patch.number:
	  -Dpatch.number=2rc.ndgf
	  
	  removed dCachePackagePrefix variable
	  removed dcache-srm.jar
	  removed dcache-replica.jar
	  added solaris package generation
	  all variables moved into properti files

2008-11-20 08:30  tigran

	* dcap_command.c: fixed spelling error in printout

2008-07-23 15:06  tigran

	* pydcap.i: fixed module name

2008-07-19 19:45  tigran

	* dcap_test.py, pydcap.i: added python wraper from dcap
	  
	  including test. Next step Makefile
	  
	  Sign-off-by: Gerd, Martin

2008-07-02 16:49  tigran

	* security_plugins/gssapi/Makefile.gsi,
	  security_plugins/gssapi/Makefile.gsi-ia64,
	  security_plugins/gssapi/Makefile.gss,
	  security_plugins/gssapi/Makefile.gss-ia64,
	  security_plugins/gssapi/gssIoTunnel.c,
	  security_plugins/gssapi/tunnelQueue.c,
	  security_plugins/gssapi/tunnelQueue.h: merged multiple connection
	  GSS context handling fix:
	  
	  keep a gss context per socket connetion

2008-06-11 07:45  tigran

	* security_plugins/javatunnel/SelfTest.java: print group and role

2008-06-11 07:16  tigran

	* security_plugins/javatunnel/TunnelSocket.java: cleanup (white
	  space, casting....)

2008-06-11 07:15  tigran

	* security_plugins/javatunnel/TunnelServerSocket.java: cleanup

2008-06-11 07:14  tigran

	* security_plugins/javatunnel/GssTunnel.java: cosmetic

2008-06-11 07:13  tigran

	* security_plugins/javatunnel/GsiTunnel.java: fixed vomscert
	  handling

2008-06-11 07:09  tigran

	* security_plugins/javatunnel/TunnelServerSocketCreator.java: java
	  5 cleanup

2008-06-10 12:24  tigran

	* security_plugins/javatunnel/SelfTest.java: self test simulates
	  LoginManager

2008-06-02 21:47  litvinse

	* security_plugins/gssapi/Makefile.gss: Vladimir's make file to
	  build lingssTunnel.so

2008-06-02 21:02  litvinse

	* security_plugins/gssapi/Makefile.gss-ia64: introduce Makefile
	  from Vladimir to build libgssTunnel.so

2008-06-02 08:17  tigran

	* security_plugins/javatunnel/SSLServerSocketCreator.java,
	  security_plugins/javatunnel/SSLTunnelServerSocket.java,
	  security_plugins/javatunnel/TunnelServerSocketCreator.java:
	  Implemented SocketFactory interface

2008-05-15 18:05  catalind

	* security_plugins/telnet/dcapPasswd.c: fixed repositioning inside
	  the passwd file

2008-05-15 15:52  catalind

	* security_plugins/telnet/Makefile,
	  security_plugins/telnet/dcapPasswd.c: support for password file
	  management

2008-05-09 19:07  catalind

	* security_plugins/ssl/Makefile, security_plugins/ssl/README,
	  security_plugins/ssl/passwd4dCapDoor.example,
	  security_plugins/ssl/telnetTunnel.c:

2008-05-09 18:32  catalind

	* security_plugins/telnet, security_plugins/telnet/Makefile,
	  security_plugins/telnet/README,
	  security_plugins/telnet/get_user.h,
	  security_plugins/telnet/passwd4dCapDoor.example,
	  security_plugins/telnet/telnetTunnel.c,
	  security_plugins/telnet/user.c,
	  security_plugins/telnet/user_entry.h: the auth support files for
	  telnet

2008-05-09 18:21  catalind

	* security_plugins/ssl/Makefile, security_plugins/ssl/README,
	  security_plugins/ssl/passwd4dCapDoor.example,
	  security_plugins/ssl/telnetTunnel.c: Files for authdoor

2008-05-02 14:23  tigran

	* dcap_read.c: readv2 splits single readv2 request with count
	  bugger than IO_VEC (1024 ) to multiple chunks

2008-05-02 13:10  tigran

	* dcap_read.c: patch from Shuwei YE <yesw@bnl.gov> :
	  
	  fixed read-ahead accounting in case of next read request do not
	  feet into read-ahead buffer,
	  but some bytes still left

2008-01-17 10:28  tigran

	* security_plugins/javatunnel/GsiTunnel.java: typo in a comment

2008-01-17 10:27  tigran

	* security_plugins/javatunnel/GsiTunnel.java: use telescopic
	  constructor

2007-12-23 20:40  tigran

	* security_plugins/javatunnel/GssTunnel.java: propagate GSS
	  exception as IOExcetion

2007-11-15 16:06  tigran

	* security_plugins/gssapi/Makefile,
	  security_plugins/gssapi/Makefile.gsi,
	  security_plugins/gssapi/Makefile.gsi-ia64,
	  security_plugins/gssapi/gssIoTunnel.c: changes from 1.7

2007-11-01 08:56  root

	* .: layout reorgonize

2007-07-10 07:19  tigran

	* new release with readv2 support

2007-07-09 19:35  tigran

	* iovec2.buff is char * now

2007-07-09 19:33  tigran

	* no compile time warnings any more

2007-07-09 19:18  tigran

	* better debug messages

2007-07-06 23:18  tigran

	* real stress test
	  uses index.dat file

2007-07-06 23:18  tigran

	* some cleanups

2007-07-06 16:10  tigran

	* added vector read

2007-07-06 16:09  tigran

	* time format in printout

2007-06-19 13:24  tigran

	* make gsi io buffer 1MB

2007-06-07 08:00  tigran

	* added some checks

2007-06-07 07:17  tigran

	* added dummy client with p2p client behavior

2007-04-05 20:07  podstvkv

	* Merge changes from production-1-7-0. Tunnel verification is
	  deferred until the socket is actually accessed.

2007-04-05 20:07  podstvkv

	* Merge changes from production-1-7-0. Tunnel verification method
	  added

2007-02-22 10:28  tigran

	* fixed bug in getNodePath() : extra '/' on front of path

2007-02-22 10:19  tigran

	* add extra option to all dc_xx operation over control line

2006-11-27 22:52  podstvkv

	* Working version for GT4 64 bit

2006-10-11 09:50  tigran

	* cleanup

2006-10-11 09:49  tigran

	* fixed channel binding problem with GSS-KRB5

2006-10-11 08:37  tigran

	* added dc_readv and dc_writev

2006-10-11 08:34  tigran

	* do not print debug information

2006-10-11 07:56  tigran

	* fixed one of the reasons of CLOASE_WAIT with tunnels

2006-09-26 07:47  tigran

	* added readv/writev

2006-09-26 07:41  tigran

	* added readv/writev

2006-09-26 07:40  tigran

	* cosmetic changes

2006-09-22 13:38  tigran

	* maxilam debug message len 2048 character

2006-09-22 13:25  tigran

	* fixes of possible memory leaks

2006-09-05 13:19  tigran

	* added concept of user,role and group

2006-08-30 09:54  tigran

	* bugfix:
	  fseeo64 returns 0 or -1
	  dc_fopen uses fopen64 for local files

2006-08-25 09:16  tigran

	* passive DCAP release

2006-07-17 15:13  tigran

	* added client active mode
	  clinet connects to the pool

2006-06-21 14:02  tigran

	* added fix for uninitialized EOF flag

2006-05-03 12:44  tigran

	* io buffer 16K to get running with more than 56 certificates

2006-05-02 12:19  tigran

	* fixed source/destination order

2006-04-18 12:23  tigran

	* send for client == receive for server

2006-04-11 08:27  tigran

	* all io finctions in dccp replaces with corresponding DCAP
	  functions

2006-03-28 11:42  tigran

	* added dc_chown

2006-03-24 15:15  deriese

	* more

2006-03-22 09:08  tigran

	* make use of System.arraycopy

2006-03-17 13:15  deriese

	* adding cvs.cvsroot property

2006-03-15 15:06  deriese

	* corrections; performance improvements

2006-03-15 14:52  deriese

	* Added dependency on COG

2006-03-15 14:38  deriese

	* changed sourcesDir to javatunnel.sourcesDir

2006-03-10 16:34  deriese

	* adding build.xml which comiles javatunnel.jar and calls make for
	  C stuff

2006-01-09 14:28  tigran

	* use of system_fstat

2006-01-06 08:45  tigran

	* new release

2006-01-02 11:38  tigran

	* sending premission on create with URL syntax

2005-12-20 11:01  tigran

	* correct binary opration

2005-12-20 10:48  tigran

	* correct binary opration

2005-12-20 09:48  tigran

	* remove O_LARGEFILE flags if ot was passed to open

2005-12-20 09:40  tigran

	* fixed large files problem

2005-12-19 11:06  tigran

	* synchronized with dcap.h

2005-12-19 10:23  tigran

	* added O_LARGEFILE in open flags

2005-11-10 16:01  tigran

	* new bug-fix release:
	  fixed memory corruption
	  fixed incorrect behavior in multithreading appication + dc_stat

2005-11-09 14:48  tigran

	* mulithreding bug fix:
	  
	  do not use alternative poll for control messages ( AND stat as
	  well ! )

2005-11-08 15:15  tigran

	* fixed memory corruption

2005-10-28 09:05  tigran

	* fixed dcap looping if control line goes away

2005-08-23 09:54  tigran

	* fixed memory leak

2005-08-23 09:35  tigran

	* new bug-fix version + windows port

2005-08-23 09:34  tigran

	* fixed tunnel reuse by reusing connection ( mounted pnfs )

2005-08-15 10:05  tigran

	* windows port updated to version 1.2.35+

2005-06-15 08:14  tigran

	* new bux-fix release:
	  fixed opendir gsidcap based fstat

2005-06-15 08:13  tigran

	* more correct node to path

2005-06-13 14:16  tigran

	* fixed node2path convertion

2005-06-07 08:35  tigran

	* added -fPIC flag

2005-06-06 08:45  tigran

	* open send's the file path within open commant on write

2005-04-25 07:56  tigran

	* some cosmetic changes

2005-04-11 08:12  tigran

	* preload: more debug output
	  dc_closedir: fixed behavior with NULL argument

2005-03-26 12:06  ernst

	* *** empty log message ***

2005-03-26 11:56  ernst

	* Added Makefile.gsi for IA64

2005-03-02 16:24  tigran

	* cosmetic

2005-03-02 16:17  tigran

	* cosmetic

2005-02-15 09:34  tigran

	* added dc_rename

2005-02-04 13:58  tigran

	* new release

2005-02-01 09:23  tigran

	* added:
	  errno setted according errno from control line

2005-01-31 09:49  tigran

	* added dc_rename

2005-01-19 12:07  tigran

	* try to remove path if it's not urs, if create failed

2005-01-18 11:26  tigran

	* bux-fix release(dc_opendir)

2005-01-18 10:17  tigran

	* added EIO as errno if sayHello failed

2005-01-17 15:40  tigran

	* fixed incorrect tocken legth

2005-01-14 09:16  tigran

	* perror-s disabled...

2005-01-12 11:41  tigran

	* dc_opendir returns NULL if path do not exist

2004-12-02 15:35  tigran

	* removed odll binmod staff

2004-12-02 13:06  tigran

	* new release 1.2.33
	  64/32 bit functionality in one shared object
	  fixes in gss tunnel

2004-12-02 09:31  tigran

	* added -pipe into CFLAGS

2004-12-02 09:21  tigran

	* fixed compile time warnings

2004-12-02 09:16  tigran

	* cleanup of old 32/64 support

2004-12-01 14:25  tigran

	* added coling of file descriptos at exit in preload mode

2004-11-30 17:00  tigran

	* removed waste from 32/64 bit mods

2004-11-30 16:13  tigran

	* fixed truncate and owerwriting of existing files

2004-11-11 14:42  tigran

	* move to 64 bit

2004-11-04 14:42  tigran

	* fixed 32 to 64 move

2004-11-04 14:37  tigran

	* fixed sun port

2004-11-04 14:36  tigran

	* fixed sun port

2004-11-04 14:29  tigran

	* fixed sun port

2004-11-04 14:16  tigran

	* fixed 32 to 64 migration

2004-11-04 07:58  tigran

	* added authors list

2004-11-03 17:12  tigran

	* small fix

2004-11-03 16:32  tigran

	* dc_fxxxx move to 64 bit

2004-11-03 14:09  tigran

	* moved to 64 bit mod

2004-11-01 19:33  tigran

	* move to LGPL licence

2004-11-01 19:32  tigran

	* removed dc_stage.c dc_check.c

2004-10-28 09:00  tigran

	* fixed truncate with url syntax

2004-10-26 08:31  tigran

	* fixed incorrect behavior if eRead returns -1 during
	  authentification

2004-10-25 12:25  tigran

	* added CFLAG for globus bug

2004-10-25 09:21  tigran

	* added globus module activation/deactivation

2004-10-17 19:15  tigran

	* debug level 0 switches off all debug mesages

2004-10-08 07:42  tigran

	* fixed solaris port

2004-10-06 08:08  tigran

	* added net-role pluggin

2004-10-05 14:45  tigran

	* added rpm generation

2004-10-05 12:55  tigran

	* added more error handling

2004-10-05 12:46  tigran

	* added cheching result of sendControlMessage

2004-10-05 12:43  tigran

	* added checking of control lipe prior sending messages

2004-10-05 12:39  tigran

	* added ascii shutdown handling

2004-10-05 09:40  tigran

	* added CFLAGS in to version string

2004-09-22 20:06  tigran

	* added BINMOD in version string

2004-09-20 17:33  tigran

	* fixed typo error

2004-08-24 19:42  tigran

	* ia64 port

2004-08-18 11:49  tigran

	* new bug-fix version

2004-07-27 08:39  tigran

	* fixed lseek with SEEK_END
	  added fgetc, ftello fseeko

2004-07-26 12:37  tigran

	* added job hack

2004-07-23 09:55  tigran

	* added dc_fgetc

2004-07-20 10:58  tigran

	* moves from sigblock to sigprocmask

2004-07-20 10:25  tigran

	* added signal blocking durin IO initialization

2004-07-20 10:16  tigran

	* added slocking of ALARM signal durin IO initialization

2004-07-19 10:02  tigran

	* new bug-fix release

2004-07-19 10:01  tigran

	* better reconnect
	  fixed dc_dup and reconnect problem
	  cleaned some compile time warnings

2004-07-16 21:25  tigran

	* added fetching of last data block in read operation if FIN do not
	  arrived

2004-07-12 10:51  tigran

	* new version

2004-06-29 15:22  tigran

	* fixed stream with url

2004-06-29 13:53  tigran

	* added environment variable for data port definition

2004-06-23 13:12  tigran

	* small bug fix

2004-06-23 13:11  tigran

	* added solaris port

2004-06-22 20:55  tigran

	* fixed memory leak

2004-06-22 14:12  tigran

	* added dc_opendir, dc_readdir, dc_closedir

2004-06-17 07:06  tigran

	* fixed -truncate flag for new files

2004-06-16 14:04  tigran

	* new release

2004-06-16 14:02  tigran

	* new release

2004-06-16 08:16  tigran

	* fixed truncate

2004-06-14 08:44  tigran

	* fixed debug_map.h creation

2004-06-11 13:48  tigran

	* added creation of index file if it's do not exist
	  added automatic byteswaping

2004-06-11 09:11  tigran

	* added ia64

2004-06-09 07:59  tigran

	* code cleanup

2004-06-04 09:14  tigran

	* added BINMOD option for make

2004-06-04 08:08  tigran

	* added dcap_chmod

2004-06-03 14:21  tigran

	* added system_access
	  added dc_chmod

2004-06-03 13:41  tigran

	* fixed copy-paste error

2004-06-03 12:18  tigran

	* fixed directory creation mask

2004-06-02 09:32  tigran

	* added dc_mkdir

2004-05-27 15:00  tigran

	* added dc_mkdir

2004-05-26 08:44  tigran

	* added gss_delete_sec_context into eDestroy

2004-05-24 13:52  tigran

	* added dc_rmdir

2004-05-12 07:38  tigran

	* added dccp with directio support

2004-05-10 11:52  tigran

	* new dev version

2004-05-06 18:14  tigran

	* added keeping of original errno, returned by system_stat

2004-05-06 08:17  tigran

	* changed DCACHE_RWBUFFER to DCACHE_WRBUFFER

2004-05-06 07:20  tigran

	* selftest fix

2004-05-06 07:19  tigran

	* printout cosmetic

2004-05-03 14:59  tigran

	* better error handling

2004-04-22 08:32  tigran

	* fixed debug message

2004-04-21 16:32  tigran

	* added dcap_unlink.c

2004-04-21 13:24  tigran

	* added dc_unlink

2004-04-13 08:24  tigran

	* quick hack for lstat and errno

2004-04-10 20:09  tigran

	* fixed warning on CYGWIN

2004-04-10 20:02  tigran

	* added dcap_shared.h

2004-04-10 20:02  tigran

	* remove perror

2004-04-10 19:49  tigran

	* added dc_fgets into dcap.h.in
	  added fxxx functions in non LIBC/syscalls part

2004-04-07 14:18  tigran

	* fixed free-ing of wrong variable

2004-04-07 14:15  tigran

	* removed unneeded print statnemts

2004-04-07 14:10  tigran

	* added truncate

2004-04-07 12:28  tigran

	* added getPnfsIDbyPath

2004-04-07 12:06  tigran

	* added getPnfsIDbyPath

2004-04-07 12:04  tigran

	* dded xutil.c

2004-04-07 09:15  tigran

	* added xbasename, xdirname, xstrndup into xutil
	  added getpnfsidbyname

2004-04-06 15:47  tigran

	* changed stream functions with there system_xxx equivalents

2004-04-06 15:42  tigran

	* added hooks for IO streams ( fopen, fread, .... )

2004-04-06 15:40  tigran

	* added system_xxx for stream operations (fopen, fread, ...)

2004-04-06 15:17  tigran

	* added declaration od dc_feof

2004-04-06 14:54  tigran

	* modified format from %ld to %lld in alloc-size

2004-04-05 07:48  tigran

	* added LIBC into Makefile.linux

2004-04-03 21:10  tigran

	* dc_getURL adds port number if it was not specified
	  port number taken from /etc/services or default value used

2004-04-03 21:07  tigran

	* move DEFAULT_DOOR_PORT to dcap_types.h

2004-04-02 16:03  tigran

	* agged url => tunnel

2004-03-26 13:40  tigran

	* added getxattr, fgetxattr, lgetxattr into preload

2004-03-26 12:06  tigran

	* got cp running with url
	  added listxattr, flistxattr, llistxattr

2004-03-26 10:27  tigran

	* added fstat into prealod

2004-03-26 09:49  tigran

	* added posibility tu anable write buffer by environmet variable

2004-03-25 14:45  tigran

	* removed MSDOS new line characters

2004-03-25 13:39  tigran

	* added O_LARGEFILE to the open flags in case of
	  _FILE_OFFSET_BITS==64

2004-03-24 20:38  tigran

	* moved 64 bit functions into other module

2004-03-24 16:59  tigran

	* 64 bit part moved into seporate file

2004-03-23 14:58  tigran

	* removed unneeded strdup/free

2004-03-22 14:57  tigran

	* fixed pthread only varian on solaris

2004-03-22 14:50  tigran

	* use pthreads only

2004-03-19 15:47  tigran

	* modified to use static libraries of globus

2004-03-18 16:29  tigran

	* changed off_t to off64_t for lseek64

2004-03-18 13:39  tigran

	* cosmetic change

2004-03-18 13:33  tigran

	* work around glibc header files mess with 32 and 64 bits functions

2004-03-17 08:23  tigran

	* onstructor need an arrgument to work correctly with dCache

2004-03-15 13:53  tigran

	* Globus GSI port

2004-03-15 13:50  tigran

	* Grid-GSI port

2004-03-11 21:13  tigran

	* fixed CygWin port

2004-03-11 20:10  tigran

	* added gid into hello

2004-03-08 15:24  tigran

	* added O_TRUNC passing to the door

2004-03-03 16:17  tigran

	* new version 1.2.27
	  added write cache
	  added stat & Co.
	  added hooks for opendir & Co.
	  added dc_access
	  clear preload code

2004-02-26 15:19  tigran

	* update of win32 port

2004-02-26 15:10  tigran

	* init_debug prints the actual library version

2004-02-26 13:09  tigran

	* move sgi port from syscalls to dlsym

2004-02-26 10:11  tigran

	* Sgi do not have a RTDL_NEXT, use dlopen

2004-02-26 09:33  tigran

	* moved Solaris port from syscalls to dlsym

2004-02-25 15:29  tigran

	* added opendir/readdir/closedir/telldir/seekdir hooks
	  system io uses next library from dynamic libraries stack, if
	  prefered library is not specified by environment variable

2004-02-25 14:01  tigran

	* corrected behavior if host and domain don't specified

2004-02-24 13:36  tigran

	* modified config file format
	  now: [tunnelType@]host[:port[:tunnelProvider[:tunnelType]]]

2004-02-19 13:28  tigran

	* fixed errno reseting before connection to a door

2004-02-10 10:00  tigran

	* fixed potencial access of uninitialized memory

2004-02-09 16:36  tigran

	* some cosmetic

2004-02-03 15:37  tigran

	* added cvs id

2004-01-26 14:35  tigran

	* added flag to dccp/wdccp for checksum calculation on/off

2004-01-21 12:09  tigran

	* finaly, write and seek works

2004-01-21 12:08  tigran

	* changed printout debug level

2004-01-21 10:14  tigran

	* changed printout debug level

2004-01-20 21:53  tigran

	* chaged to optimized version of adler32

2004-01-20 16:40  tigran

	* fixed?? strange behavior: wrong data size
	  HAVE TO BE TESTED

2004-01-18 13:48  tigran

	* lseek optimization:
	  no io operation in SEEK_SET if offset == current position

2004-01-13 22:01  tigran

	* Added wdccp into TARGETs

2004-01-13 12:41  tigran

	* finaly fixed read ahead write behind

2004-01-12 13:31  tigran

	* corrected adler check sum calculation
	  added initial checksum value for each check sum algorithm.

2004-01-06 13:31  tigran

	* read-ahead bug fix

2004-01-06 13:20  tigran

	* new wdccp:
	  no prestage/check
	  varios bug-fixes

2004-01-06 13:17  tigran

	* fixed double malloc/memory leak

2004-01-06 09:12  tigran

	* position request optimisation

2003-12-30 13:10  tigran

	* added access hook

2003-12-26 23:08  tigran

	* added dc_access into dcap.h

2003-12-26 23:03  tigran

	* added wdccp.c

2003-12-26 23:00  tigran

	* added wdccp

2003-12-19 11:06  tigran

	* removed write buffering, fixed r/w operation with
	  read ahead buffer

2003-12-16 13:31  tigran

	* fixed permission bug with read-only file copy

2003-12-15 09:06  tigran

	* added dc_access

2003-11-13 20:47  tigran

	* added IO tunneling plugin selection mechanism.

2003-11-05 16:13  cvs

	* The bug for the case when the client without tunnel tries to
	  connect to the server was fixed.
	  Now the server close the socket immediately and waits for another
	  connection

2003-10-16 08:59  tigran

	* removed creation of dc_check dc_stage
	  added timestamp in dcap version

2003-10-16 08:58  tigran

	* added cvs ID

2003-10-08 08:36  tigran

	* fixed memory leak

2003-10-07 20:30  cvs

	* Binaries have been replaced by shell scripts to have the same
	  finctionality as dccp

2003-10-02 22:30  cvs

	* Bug in serverConnect when working with the tunnel has fixed.

2003-09-26 14:18  cvs

	* timeout for open added : -o <seconds> (patrick)

2003-08-26 12:19  tigran

	* added write behind

2003-08-19 09:02  tigran

	* small modifications

2003-08-19 08:53  tigran

	* added static library generation

2003-08-08 13:23  tigran

	* added large file support

2003-08-08 13:19  tigran

	* fixed large file support

2003-08-08 13:04  tigran

	* added "faked" large file support

2003-08-08 13:03  tigran

	* added large file support

2003-08-07 13:56  tigran

	* added porting manual

2003-08-05 12:47  tigran

	* new release 1.2.26
	  added stat functions set
	  new preload mechanism
	  debug function moved to dc_debug
	  several bug fixes

2003-08-05 10:41  tigran

	* fixed removing existing files on create

2003-07-28 09:38  tigran

	* fstat hack to get correct file size during write

2003-07-25 11:38  tigran

	* windows port update

2003-07-25 11:36  tigran

	* Windows port update

2003-07-24 15:30  tigran

	* added va_end

2003-07-24 10:03  tigran

	* added dc_fsata and dc_debug

2003-07-24 10:02  tigran

	* small fixes
	  needed to be redesigned

2003-07-24 09:11  tigran

	* debug function replaced by dc_debug

2003-07-23 09:56  tigran

	* fixed unsafe write operation

2003-07-22 19:46  tigran

	* corrected printout

2003-07-22 19:36  tigran

	* added byte order checking

2003-07-22 19:35  tigran

	* spelling errors
	  removed unneeded members in vspNode structure

2003-07-22 11:59  tigran

	* tunned fstat behavior

2003-07-21 12:24  tigran

	* verbose printout

2003-07-18 10:53  tigran

	* fixed some compile time warnings

2003-07-17 18:30  tigran

	* added dc_fstat and dc_fstat64 implementations

2003-07-09 10:31  tigran

	* added trace back functionality

2003-07-07 19:17  tigran

	* removed cvs log

2003-07-07 19:11  tigran

	* removed cvs Log

2003-07-07 14:21  cvs

	* one more fix

2003-07-07 14:05  cvs

	* fixed incorrest behavior of dc_ftell

2003-07-07 09:14  cvs

	* fixed incorrect behavior on local files

2003-07-03 11:34  cvs

	* corrected behavior of unsafeWrite operation on seek

2003-05-22 17:59  cvs

	* allowed to modify existed files

2003-05-14 08:06  cvs

	* if DCACHE_USE_UNSAFE env defined, all write operation becomes
	  unsafe by default.

2003-03-28 10:08  cvs

	* dc_dup and dc_fsync in seporate files

2003-03-26 11:41  cvs

	* EOF handled correctly

2003-03-24 16:17  cvs

	* close sends a checksum counted during the write operation

2003-03-24 09:39  cvs

	* remove compile time warning

2003-03-22 09:31  cvs

	* removed warning at compile time

2003-03-20 11:48  cvs

	* all dc_xxx functions are located in the seporate files

2003-03-18 15:26  cvs

	* make install installes dc_hack.h as well

2003-03-18 15:25  cvs

	* remove license note

2003-03-18 10:36  cvs

	* fixed definitions of dc_fread and dc_fwrite

2003-03-17 22:45  cvs

	* lstat ans stat uses lstat64 and stat64 + stat64to32

2003-03-17 22:23  cvs

	* added stat64 to stat convertor

2003-03-17 21:43  cvs

	* added "unknown error"

2003-03-17 15:47  cvs

	* fixed for solaris

2003-03-17 15:29  cvs

	* added stat64 into BSD_SYSCALLS section

2003-03-17 13:53  cvs

	* stat code cleanup

2003-03-17 13:28  cvs

	* stat & Co. takes version number from header file

2003-03-17 10:06  cvs

	* fixed unclosed file descriptop in loop

2003-03-16 21:28  cvs

	* updated according new functions

2003-03-16 21:19  cvs

	* spelling fix

2003-03-16 21:01  cvs

	* added system_dup

2003-03-16 20:04  cvs

	* added dc_dup

2003-03-16 20:03  cvs

	* stat & Co. needs __xstat64 to work

2003-03-14 11:55  cvs

	* added fstat and fstat64 in BSD_SYSCALL section

2003-03-14 09:55  cvs

	* fixed dc_lstat calls system_lstat

2003-03-14 09:53  cvs

	* st_dev and st_rdev are not printed anymore

2003-03-14 07:36  cvs

	* fixes for _LARGEFILE64_SOURCE and lstat

2003-03-13 20:42  cvs

	* added dc_lstat

2003-03-12 11:49  cvs

	* stat related changes on Solaris

2003-03-12 11:42  cvs

	* added dc_stat64

2003-03-12 11:35  cvs

	* fixed debug initialization prior debug leve check

2003-03-12 10:57  cvs

	* added O_CREAT into open option

2003-03-10 16:25  cvs

	* linux also has a struct stat64 :)

2003-03-10 16:22  cvs

	* updated MSVC project files

2003-03-10 16:15  cvs

	* removed ^M

2003-03-10 16:12  cvs

	* windows port update

2003-03-10 16:11  cvs

	* tryed to fix problem with stst and stat64 under the solaris

2003-03-10 09:44  cvs

	* removed preloading of the fflush

2003-03-08 21:55  cvs

	* fixed write behind the buffer

2003-03-08 21:43  cvs

	* work around out of stack with preload library

2003-03-08 00:32  cvs

	* added dc_fsync

2003-03-07 11:59  cvs

	* added debug printouts

2003-03-07 11:58  cvs

	* flush not used inside dcap library anymore

2003-03-07 11:32  cvs

	* no fflush used internaly

2003-03-06 21:08  cvs

	* quick hack to preload fflush

2003-03-06 17:18  cvs

	* preload part moved into other file as it have to be supported now
	  :(
	  added dc_fflush

2003-03-06 13:42  cvs

	* improved dcap_test
	  dc_stat gets permissions as a output from ls -l command

2003-03-05 08:45  cvs

	* make cleanall removes preload library as well

2003-03-05 08:43  cvs

	* added dc_stat into windows dll export file

2003-03-04 23:02  cvs

	* now it's possible to define the dynamic symbol names of libc IO
	  functions in the make file
	  improved error handling in system_io

2003-03-04 22:02  cvs

	* added dcap_protocol.c
	  dcap_control.h marged with dcap_protocol.h

2003-03-04 16:38  cvs

	* implemented dc_stat with some code reorganization

2003-03-04 16:37  cvs

	* added invalid url error state

2003-03-04 16:35  cvs

	* added DEURL - unvalid url

2003-03-04 16:34  cvs

	* fixed system_stat to run with glibc and dlsym

2003-03-03 09:42  cvs

	* added dc_pwrite

2003-02-25 14:26  cvs

	* bugfix for pnfs://

2003-02-25 10:16  cvs

	* fixed windows export file

2003-02-25 08:49  cvs

	* last stable version without dc_stat and dc_fstat

2003-02-24 12:49  cvs

	* added skeletons for dc_stat and dc_fstat

2003-02-24 11:24  cvs

	* added dcap:///filesystem/domain ==
	  dcap://default_server.domain/filesystem/domain

2003-02-21 13:27  cvs

	* fixed send/receive buffer size

2003-02-21 13:16  cvs

	* fixed spelling errors

2003-02-21 12:27  cvs

	* fixed compile time warning

2003-02-21 11:50  cvs

	* added dc_open64

2003-02-20 10:23  cvs

	* added -send -recive options into open request
	  changed -w option to -s in dccp

2003-02-14 13:29  cvs

	* fixed compile time error under the windows

2003-02-14 13:13  cvs

	* remove CVS log

2003-02-14 12:26  cvs

	* changes followLink realisation to LIBC

2003-02-14 11:46  cvs

	* reduced unneeded bilds

2003-02-14 11:39  cvs

	* added send/recive buffer size tuning into windows export file

2003-02-14 11:36  cvs

	* some fixes to reduce complie cycles

2003-02-06 11:21  cvs

	* compile time warning

2003-02-06 11:08  cvs

	* more changes in TCP send/resive buffer size tunning

2003-02-06 10:51  cvs

	* corrected send/recive buffer size tunning
	  dcap_poll reports an error if control line not in the list of
	  know control lines

2003-02-05 16:55  cvs

	* fixed maj min version order in the hello

2003-02-04 15:44  cvs

	* new flag in dcap_poll

2003-02-03 10:32  cvs

	* new bugfix release

2003-01-31 16:02  cvs

	* added <sys/socket.h> for send/recive buffer sizes

2003-01-31 14:01  cvs

	* added tunnable send/recive buffer size

2003-01-28 11:07  cvs

	* fixed looping in getControlMessage when control connection down

2003-01-27 17:37  cvs

	* added error state printout

2003-01-27 09:33  cvs

	* fixed revents testing in poll

2003-01-21 11:10  cvs

	* timeout changed to 1 second

2002-12-08 16:27  cvs

	* minor changes

2002-11-27 09:56  cvs

	* fixed spelling errors in printouts

2002-11-26 11:11  cvs

	* bugfix

2002-11-26 11:10  cvs

	* fixed open bug

2002-11-26 10:25  cvs

	* new release
	  added dc_fxxx functions
	  added win32 suport
	  added workaround looping
	  fixed tunneling
	  added auto debuglevel increasing
	  added callback port range binding

2002-11-26 10:22  cvs

	* redused compile time warnings on sgi

2002-11-25 16:45  cvs

	* added looping brake in read size missmatch

2002-11-25 14:21  cvs

	* added dc_ferror

2002-11-25 11:45  cvs

	* removed unneeded stuff

2002-11-25 09:47  cvs

	* dc_fxxx function declaration in dcap.h and dcap.def
	  fixed dc_hach.h

2002-11-24 19:57  cvs

	* final dc_fdopen and dc_ftell

2002-11-24 18:41  cvs

	* added dc_ftell

2002-11-24 18:18  cvs

	* added lock handling into dc_fdopen

2002-11-24 18:08  cvs

	* fixed dc_fdopen one more time

2002-11-24 18:03  cvs

	* fixed dc_fdopen

2002-11-24 17:49  cvs

	* added dc_fdopen

2002-11-21 15:40  cvs

	* changed printout at reviced block missmatch

2002-11-19 16:35  cvs

	* HERMES dc_fxxx workaround......

2002-11-19 11:24  cvs

	* linux fixes for srteam FILE

2002-11-19 10:22  cvs

	* remove createon of libfdcap

2002-11-19 10:20  cvs

	* dc_fxxx moved in to dcap.c

2002-11-18 17:20  cvs

	* removed redundant arguments in some function calls

2002-11-18 14:20  cvs

	* fixed memory leak

2002-11-18 11:55  cvs

	* removed redundant information in function calls

2002-11-15 11:53  cvs

	* some cosmetic changes

2002-11-15 10:37  cvs

	* debug level self increasind limited to DC_ERROR + DC_INFO

2002-11-15 10:30  cvs

	* control connection "pinged" only when LOCK was activated

2002-11-14 18:08  cvs

	* added ping of the control line when going to reuse it

2002-11-14 16:57  cvs

	* added self error level increasing at reconnect procedure

2002-11-14 09:49  cvs

	* dc_errno resetted to OK at any dc_xxx call

2002-11-13 13:25  cvs

	* removed DOS <new line> characters

2002-11-13 08:57  cvs

	* dc_setCallbackPortRange takes first_porl , last_port

2002-11-11 17:19  cvs

	* added ERR as variable for /dev/null

2002-11-11 17:16  cvs

	* _REENTRAND not defined when defined WIN32

2002-11-11 16:56  cvs

	* spellcheck fix

2002-11-11 13:59  cvs

	* added dc_setCallbackPortRange

2002-11-11 10:21  cvs

	* fixed parseConfig: incorrect behavior when port number not
	  specified

2002-11-06 15:19  cvs

	* fully running windows port

2002-11-06 13:35  cvs

	* added .DEF file to define exports in the .DLL

2002-11-05 13:50  cvs

	* added winmm.lib into dcap.dll project

2002-11-04 15:45  cvs

	* added printout on HUP/ERR state in poll

2002-11-04 14:02  cvs

	* spelling errors in printout

2002-11-04 14:01  cvs

	* if - fi replaced by case - esac

2002-11-03 17:29  cvs

	* added support for CYGWIN

2002-11-03 11:21  cvs

	* added extra option in make file for exe and library extention

2002-11-02 12:44  cvs

	* libdcap under the windows

2002-11-02 00:18  cvs

	* running version under cygwin

2002-11-01 23:52  cvs

	* first touch to cygwin

2002-11-01 23:51  cvs

	* added Makefile for cygwin

2002-11-01 16:25  cvs

	* remobed \n at the end of timestamp string

2002-11-01 16:21  cvs

	* added timeing in windows

2002-11-01 16:01  cvs

	* tcp port moved from int to unsigned short
	  dccp under windows do not produses readonly files

2002-11-01 14:29  cvs

	* added unix/dos path converting

2002-10-28 15:45  cvs

	* added MS Visual Studio Project files

2002-10-28 14:51  cvs

	* remove dcap_signal.h from WIN32 selection

2002-10-27 11:29  cvs

	* added WIN32 ifdef

2002-10-25 13:49  cvs

	* added dlxxx to windows

2002-10-25 10:05  cvs

	* fixed blocking/nonblicking calls under the Windows

2002-10-25 09:47  cvs

	* removed unneeded SSL files

2002-10-25 09:46  cvs

	* WIN32 Running!

2002-10-23 21:00  cvs

	* First WIN32 port

2002-10-23 10:35  cvs

	* missing header file

2002-10-23 10:33  cvs

	* added user password authentification

2002-10-23 09:40  cvs

	* all debug macros have DC_ prefix
	  stared WIN32 porting

2002-10-22 13:00  cvs

	* fixed username

2002-10-22 12:44  cvs

	* added UserValidator

2002-10-22 09:36  cvs

	* added auth protocol versioning

2002-10-21 14:38  cvs

	* added new methods

2002-10-21 13:58  cvs

	* added user name

2002-10-21 09:35  cvs

	* accpet returns SSLTunnelSocket

2002-10-21 09:33  cvs

	* added SSLTunnelSocket.java

2002-10-19 08:56  cvs

	* added ssl tunnel

2002-10-18 13:04  cvs

	* class now public

2002-10-18 12:56  cvs

	* constructor now public

2002-10-18 12:44  cvs

	* added mail method

2002-10-18 12:22  cvs

	* fixed TunnelServerSocket.java
	  added ssl support

2002-10-16 16:20  cvs

	* if gss fails -> goto plain

2002-10-16 16:20  cvs

	* if gss failes -> go to plain

2002-10-16 12:29  cvs

	* fixed freeing NULL pointer

2002-10-14 11:53  cvs

	* added javatunnel part

2002-10-14 11:45  cvs

	* Makefile is more "general"

2002-10-14 10:31  cvs

	* added gssapi-based security plugin

2002-10-11 12:04  cvs

	* fixed failed ping looping

2002-10-11 10:19  cvs

	* fixed tunneling support

2002-10-07 09:17  cvs

	* removed log messages

2002-09-27 12:44  cvs

	* remove LICENSE from FNAL dc_check/stage

2002-09-27 12:38  cvs

	* Added LICENSE

2002-09-25 08:27  cvs

	* fixed memory leak

2002-09-09 15:25  cvs

	* new bugfix for version 1.2.20

2002-09-09 15:21  cvs

	* gcc-problem

2002-09-09 15:18  cvs

	* fixed bug ( changed flag in dc_set_pos)

2002-09-09 14:47  cvs

	* more and more...

2002-09-09 14:32  cvs

	* test is better and better....

2002-09-09 13:28  cvs

	* applyed chanes of dc_set_pos

2002-09-09 13:27  cvs

	* improved test

2002-09-09 10:14  cvs

	* new release
	  i) io tunneling
	  ii) new system io handling on linux
	  iii) better reconnect
	  iV) pread
	  V) small changes in the structure ( dc_read -> dc_real_read

2002-09-09 10:10  cvs

	* better and better ....

2002-09-09 09:56  cvs

	* gcc compile time warnings....

2002-09-09 09:52  cvs

	* small fixes

2002-09-09 09:49  cvs

	* fixed reconnect operations

2002-09-09 09:47  cvs

	* new test application

2002-09-08 08:29  cvs

	* fixed gcc options

2002-09-07 14:33  cvs

	* compile time warnings

2002-09-04 13:22  cvs

	* improved reconnect

2002-09-04 10:01  cvs

	* fixed ioTunnel in sendControlMessage

2002-09-04 09:08  cvs

	* added dc_setStrDebugLevel

2002-09-04 08:54  cvs

	* compile time warnings

2002-09-02 09:48  cvs

	* added ignore errors on close for read-only operations

2002-08-29 14:20  cvs

	* lint passed

2002-08-29 12:00  cvs

	* fixed un-NULL-ed pointer
	  bzero and bcopy replaced by memset and memcpy

2002-08-23 14:03  cvs

	* spellcheck

2002-08-23 13:52  cvs

	* added command line switch to activate io tunnel

2002-08-23 11:59  cvs

	* added lineparser
	  changed configParser

2002-08-23 11:57  cvs

	* added lineparser.c

2002-08-21 12:43  cvs

	* added dlopen way to access system io functions

2002-08-21 10:46  cvs

	* cosmetic changes

2002-08-21 10:41  cvs

	* fnal test

2002-08-21 09:18  cvs

	* remove SSL part

2002-08-20 09:34  cvs

	* removed Makefile.com

2002-08-20 08:17  cvs

	* fixed cvs Id

2002-08-19 10:44  cvs

	* cosmetic changes

2002-08-19 10:23  cvs

	* added debug_level.lst

2002-08-19 10:22  cvs

	* added setStrDebugLevel
	  debug_list.h and debug_map.h created by make

2002-08-18 15:37  cvs

	* new fixes in dc_stage/dc_check

2002-08-02 07:05  cvs

	* new dc_check and dc_stage from fnal

2002-08-01 14:32  cvs

	* added currentTheread.c

2002-08-01 14:07  cvs

	* added pread into preload section

2002-08-01 13:51  cvs

	* allowd multiple -d's

2002-07-31 08:00  cvs

	* -DNO_BSD_SYSCALLS for linux

2002-07-31 07:26  cvs

	* added fnal_thread.c

2002-07-30 13:07  cvs

	* added/fixed system_pread

2002-07-30 13:04  cvs

	* added pread handler

2002-07-30 12:44  cvs

	* somehow ctime_r fix was lost !!?

2002-07-30 12:11  cvs

	* added dc_pread
	  small internal changes

2002-07-29 13:52  cvs

	* fixed ctime_r on linux (POSIX ? )

2002-07-29 13:49  cvs

	* see last comment

2002-07-29 13:46  cvs

	* fixed ctime for multithreaded applications

2002-07-26 13:21  cvs

	* fixed potencial deadlock

2002-07-25 15:38  cvs

	* more checks in getControlMessage

2002-07-25 15:34  cvs

	* more checks in sendDataMessage

2002-07-25 10:52  cvs

	* init_debug called from open for all platforms

2002-07-25 10:01  cvs

	* added check for ascii message in the sendDataMessage

2002-07-23 16:25  cvs

	* dc_read: if recived size != expected size skip block & reconnect

2002-07-23 16:24  cvs

	* added aliases for reconnect flags

2002-07-22 22:02  cvs

	* NULL following free in queueGetAccepted

2002-07-22 21:10  cvs

	* fixed dcap_accept free

2002-07-22 19:45  cvs

	* change in connect printout

2002-07-19 12:50  cvs

	* libdl.so added to linker.

2002-07-19 12:40  cvs

	* added timeing in connect

2002-06-27 15:52  cvs

	* added bitmask style for debug level

2002-06-27 13:53  cvs

	* Removed gssapi from code
	  Added ioTunneling mechanism

2002-06-24 12:14  cvs

	* dcap_atuh switched off
	  fixed wead and seek operation

2002-06-19 13:36  cvs

	* control line reconnect fixes

2002-06-11 15:51  cvs

	* added timestamp

2002-06-03 09:35  cvs

	* small fix

2002-06-01 21:58  cvs

	* DCACHE_RAHEAD && DCACHE_RA_BUFFER

2002-05-22 16:29  cvs

	* added gssapi

2002-05-22 16:28  cvs

	* added Makefile.com for common part
	  added gssapi

2002-05-08 12:32  cvs

	* small optimization with callback port number

2002-05-08 08:20  cvs

	* as usualy, = and == fixed

2002-05-08 08:10  cvs

	* added dc_setCallbackPort

2002-05-07 08:49  cvs

	* fixed FLAN modifications

2002-04-25 15:11  cvs

	* fixed integer overflow

2002-04-23 15:11  cvs

	* Seperated dc_check and dc_stage

2002-04-19 08:18  cvs

	* new bugfix release 1.2.19
	  fixed resolution of absolute links

2002-04-19 08:17  cvs

	* library versioning switched off

2002-04-18 21:15  cvs

	* fixed broken link to absolute path

2002-04-18 12:13  cvs

	* removed old comment

2002-04-18 08:16  cvs

	* fixed map on the linux

2002-04-18 08:01  cvs

	* Added support for mapfile

2002-04-15 18:54  cvs

	* New file that allows use to dc_check

2002-04-09 09:09  cvs

	* kosmetic changes in the help printout

2002-04-08 14:07  cvs

	* added help-like output

2002-04-03 15:14  cvs

	* removed unneeded includes

2002-04-03 10:36  cvs

	* fixed debug_stream

2002-04-03 10:23  cvs

	* version 1.2.18
	  
	  added dc_unsafeWrite
	  added accumulative read in dccp
	  added recover of broken control line
	  added DCACHE_DEBUG_FILE
	  DCACHE_HOST changed to DCACHE_DOOR
	  added preload library into release

2002-04-03 10:13  cvs

	* fixed source accumilation

2002-04-02 21:08  cvs

	* Added DCACHE_DEBUG_FILE
	  remove compile time warning in dcap_poll.c
	  added -v -KPIC opion in Makefile

2002-04-02 12:06  cvs

	* sendDataMessage do not retry on failed close message
	  dc_close removes broken control line

2002-03-28 12:03  cvs

	* fixed alarm handling for poll on linux

2002-03-27 16:40  cvs

	* printout are changed

2002-03-27 16:03  cvs

	* added remove of the vsp_node, even if sendMessage failed

2002-03-26 17:28  cvs

	* added destroy for undeliverable messages

2002-03-26 16:58  cvs

	* added preload library in make install

2002-03-26 15:24  cvs

	* system_close removed

2002-03-26 15:22  cvs

	* fixes in pollDelet

2002-03-26 14:55  cvs

	* fixed in pollDelete

2002-03-26 14:47  cvs

	* DCACHE_DOOR == DCACHE_HOST

2002-03-25 17:23  cvs

	* fix in pollDelete

2002-03-25 17:12  cvs

	* in newControlLile added removing of old file descriptor

2002-03-25 16:27  cvs

	* url nou in nodes
	  preparations for reconnect

2002-03-25 15:53  cvs

	* first touch to the control line recovery

2002-03-25 14:26  cvs

	* small fix

2002-03-25 12:06  cvs

	* added unsafe write
	  added accumulative read

2002-03-25 12:02  cvs

	* added unsafe write

2002-03-23 22:38  cvs

	* removed compile time warnings

2002-03-22 14:48  cvs

	* addes error message

2002-03-22 14:09  cvs

	* write test

2002-03-22 12:09  cvs

	* ping is fixed

2002-03-21 21:13  cvs

	* changed sleep to alarm

2002-03-21 15:43  cvs

	* added write in one step

2002-03-18 16:25  cvs

	* added ping-pong into reconnect

2002-03-18 11:58  cvs

	* new version 1.2.17
	  fixed reconnect
	  added reconnect on timeouts

2002-03-15 15:45  cvs

	* now io-timeout thread safe (I hope).

2002-03-15 12:49  cvs

	* added comments in dc_set_pos and reconnect

2002-03-14 16:34  cvs

	* fixed dc_set_pos

2002-03-14 16:17  cvs

	* added reconnect on timeouts

2002-03-14 11:55  cvs

	* fixed seek_cur and node->ahead->base after last fixes of
	  reconnect

2002-03-14 09:31  cvs

	* fixed wrong position in reconnect
	  added alarm

2002-03-12 19:49  cvs

	* one more step in reconnect

2002-03-12 16:09  cvs

	* added connection recovery

2002-03-12 16:08  cvs

	* removed pin-pong stuff, added alarm

2002-03-12 16:07  cvs

	* removed pin-pong staff

2002-03-12 15:36  cvs

	* added dcap_reconnect

2002-03-12 15:26  cvs

	* added ping-pong

2002-03-11 16:26  cvs

	* fixes

2002-03-11 16:13  cvs

	* added reconnect stuff

2002-03-11 11:39  cvs

	* lock message printed only once

2002-03-06 10:50  cvs

	* new release 1.2.16
	  added blocking of dc_open if dcap.LOCK file exist in the pnfs

2002-03-06 10:48  cvs

	* first touch to ping-pong

2002-03-05 15:20  cvs

	* added clients lock for service

2002-02-26 16:32  cvs

	* new bugfix version 1.2.15
	  added tomeout in connect

2002-02-26 16:31  cvs

	* changed connect timeout to 20 seconds

2002-02-26 15:56  cvs

	* bug fix for random value of url->type at program start time

2002-02-25 15:07  cvs

	* added CVS header

2002-02-25 15:06  cvs

	* added non-blocking connect call

2002-02-25 15:04  cvs

	* added non-blocking connect

2002-02-22 13:39  cvs

	* removed unuser variable

2002-02-22 13:35  cvs

	* compilation time warning removed

2002-02-22 10:55  cvs

	* compiler warning removed

2002-02-20 14:26  cvs

	* added -mips3 in the flags

2002-02-20 14:25  cvs

	* fixed removeing old link in the installation directory

2002-02-20 12:36  cvs

	* new bugfix + new features
	  version 1.2.14

2002-02-20 12:00  cvs

	* fixed -alloc-size for urls

2002-02-20 11:36  cvs

	* added new syntax pnfs://

2002-02-20 11:01  cvs

	* fixed bug with extraOption

2002-02-19 23:09  cvs

	* fixed problem with removeing truncated files

2002-02-19 15:24  cvs

	* dc_setExtraOption permanenty puted into the code

2002-02-19 14:36  cvs

	* dcap.c: added support for multiple extra options
	  dccp.c: sending source file size as extra option

2002-02-19 13:22  cvs

	* fixes in the Makefile

2002-02-19 11:06  cvs

	* added mkdirs.sh

2002-02-19 10:39  cvs

	* small changes in the declarations

2002-02-18 20:43  cvs

	* make install improved

2002-02-18 13:52  cvs

	* added version.sh

2002-02-18 10:36  cvs

	* Added version.sh
	  Make install makes link to actual library

2002-02-15 15:56  cvs

	* some small reorganization i the read-ahead

2002-02-15 12:18  cvs

	* new release 1.2.13
	  update of the debug messages

2002-02-15 12:15  cvs

	* update of the debug messages

2002-02-14 15:37  cvs

	* new bug-fix release
	  fixed problem with changing the read-ahead buffer size

2002-02-14 15:34  cvs

	* update of the debug messages

2002-02-14 09:24  cvs

	* Fixed bug with correcting file position at change buffer size

2002-02-11 17:36  cvs

	* first touch to new reconnect mechanism

2002-02-11 17:36  cvs

	* added new target - rebuild == cleanall all

2002-02-11 17:35  cvs

	* fixed non thread-safe compile error

2002-02-11 17:25  cvs

	* fixed dcap.h generation

2002-02-11 15:24  cvs

	* added do_command_retry and ASCII_RETRY

2002-02-09 18:31  cvs

	* _REENTRANT undefined if it's defined by dcap.h

2002-02-08 11:40  cvs

	* TCP send buffer size

2002-02-07 21:47  cvs

	* Some fixes suggested by Grzegorz Mazur

2002-02-07 11:08  cvs

	* new release 1.2.11
	  added dc_strerror
	  changed retunr code of the dc_stage/dc_check
	  some internal modifications

2002-02-07 11:04  cvs

	* dcap.h removed at clean

2002-02-07 09:45  cvs

	* Cosmetic changes in Makefiles

2002-02-07 09:44  cvs

	* added include dcap_errno.h

2002-02-06 17:44  cvs

	* added generatring dcap.h on the fly ( _REENTRANT hack )

2002-02-06 15:28  cvs

	* renamed dcap_errlist.h into dcap_error.h

2002-02-06 14:45  cvs

	* added hack for dc_check

2002-02-06 14:24  cvs

	* cosmetic change in the error message

2002-02-06 14:13  cvs

	* added dcap_errno.h into install section

2002-02-06 14:02  cvs

	* added cvs "Id"

2002-02-06 14:01  cvs

	* MAXERRORNUM renamed into DEMAXERRORNUM
	  correction in out-of-range check

2002-02-06 10:15  cvs

	* error numbers moved in to dcap_errno.h
	  dc_strerror checks for out-of range values

2002-02-06 10:13  cvs

	* adopted to the new return code of the dc_stage function

2002-02-06 10:12  cvs

	* changed return codes of the dc_stage and dc_check functions

2002-02-05 15:56  cvs

	* dc_strerror retuns static pointer to server error message
	  errno setted to EIO in case of server error
	  fixed bug in prestage request for non existing files

2002-02-04 23:19  cvs

	* fixed miss-typing

2002-02-04 23:10  cvs

	* dc_error changed to dc_perror

2002-02-04 22:25  cvs

	* Added missing paren

2002-02-04 21:32  cvs

	* added dc_perror

2002-02-04 15:42  cvs

	* new bug-fix releas version 1.2.10

2002-02-04 15:36  cvs

	* removed check for lstat return value

2002-02-04 11:46  cvs

	* new bug-fix release
	  version 1.2.9

2002-02-04 11:45  cvs

	* malloc bug fix

2002-02-01 19:06  cvs

	* Added libc in the libs

2002-01-25 14:16  cvs

	* added dc_strerror

2002-01-25 14:12  cvs

	* Added dc_strerror

2002-01-21 16:52  cvs

	* new bug-fix release
	  version 1.2.8

2002-01-21 16:51  cvs

	* compilation warning fix

2002-01-21 16:50  cvs

	* bug fix -in dc_open
	  file open flag fix

2002-01-15 11:08  cvs

	* added option -b to modify read ahead buffer size

2001-12-17 09:52  cvs

	* new bugfix release

2001-12-16 12:39  cvs

	* Fixed behavior with . and ..

2001-11-30 22:18  cvs

	* fixed potencial memory leak

2001-11-30 22:17  cvs

	* added init_debug support for linux

2001-11-27 16:44  cvs

	* Added AIX support

2001-11-27 16:06  cvs

	* Adeed #ifndef NO_BSD_SYSCALLS #endif

2001-11-23 15:52  cvs

	* New version 1.2.6
	  added publishing of dccp.c
	  added DCACHE_REPLY
	  added DCACHE_DEBUG

2001-11-23 15:50  cvs

	* added publishing of dccp.c

2001-11-23 15:48  cvs

	* cosmetic changes

2001-11-23 14:13  cvs

	* cosmetic changes

2001-11-23 14:01  cvs

	* Lot of changes for public release of sources.

2001-11-22 14:09  cvs

	* no warnings at compile time on linux

2001-11-20 11:40  cvs

	* Some modifications to get init_debug running on SGI

2001-11-20 09:57  cvs

	* removed printout in init_debug

2001-11-19 17:28  cvs

	* added #pragma for debigLevel initialization

2001-11-09 12:22  cvs

	* Added DCACHE_REPLY enviroment

2001-11-08 11:08  cvs

	* added onError and openTimeOut
	  added -pid in hello

2001-11-05 09:43  cvs

	* Added -uid in hello
	  fixed stage time = 0 => sending an stage request

2001-11-02 13:22  cvs

	* added -uid in all ascii commands
	  some cleanups

2001-10-31 17:37  cvs

	* new bug fix release

2001-10-31 17:36  cvs

	* bug fixed in "if" statement ( = is not == )
	  cleaned code form unused fprint....

2001-10-31 16:32  cvs

	* new release 1.2.4
	  added dc_stage
	  added dc_check
	  fixed bug in read ahead

2001-10-31 16:30  cvs

	* fixed bug in read ahead

2001-10-31 11:09  cvs

	* added -a option to enable read ahead
	  added -B option to set the transfer buffer size

2001-10-30 16:30  cvs

	* finished dc_stage
	  added dc_check

2001-10-30 16:29  cvs

	* added node_unplug.

2001-10-30 16:28  cvs

	* Added node_unplug.

2001-10-29 17:05  cvs

	* first touch to pre-stageing.

2001-10-01 15:36  cvs

	* new release with ssl support
	  version 1.2.3

2001-10-01 11:32  cvs

	* again ssl stuff fixed

2001-10-01 09:42  cvs

	* fixed ssl include stuff

2001-09-07 11:56  cvs

	* Added SSL support for control line

2001-09-07 08:04  cvs

	* Fixed problem with varargs on solaris

2001-09-06 15:49  cvs

	* Added SSL module

2001-08-30 15:51  cvs

	* fixed stdin as a source file bug

2001-08-22 13:53  cvs

	* new bugfix release
	  version 1.2.2

2001-08-22 13:52  cvs

	* dc_errno added in to dcap.h

2001-08-22 13:50  cvs

	* more fixes in thread-safe stuff

2001-08-22 10:45  cvs

	* added dcap_accept to handle accepted sockets

2001-08-21 15:40  cvs

	* dc_error and dc_errno fully thread-safe

2001-08-20 12:29  cvs

	* more fixes in threadsafe stuff

2001-08-17 11:14  cvs

	* new bugfix release
	  1.2.1

2001-08-17 11:12  cvs

	* fixed deadlock problem

2001-08-17 10:50  cvs

	* redirected messages to the stderr

2001-08-17 10:19  cvs

	* changed pollfd.revents condition chacking

2001-08-15 09:04  cvs

	* new release 1.2.0
	  added:
	  dcap://
	  dccp <source> -

2001-08-15 09:00  cvs

	* Lot of changes in threadsafe stuff

2001-08-14 15:15  cvs

	* fixed printout

2001-08-12 14:24  cvs

	* fixed error from prevision correction :)

2001-08-11 22:16  cvs

	* changed error condition checking

2001-08-10 20:38  cvs

	* fixed creation of preload library
	  removed DCAP_TRACE

2001-08-10 15:31  cvs

	* fixed bug in allocation of host name

2001-08-05 21:01  cvs

	* associated the filename "-" with the stdin/stdout

2001-08-05 16:55  cvs

	* no longer needed to call the dc_setBufferSize function prior
	  first read.

2001-08-05 08:45  cvs

	* cleand warnings

2001-08-04 08:22  cvs

	* The stream IO functions are moved in to the one file

2001-08-03 21:27  cvs

	* The read ahead utility functions moved in to the seporate file

2001-08-03 13:56  cvs

	* Added INRX64

2001-08-02 20:49  cvs

	* Cosmetic changes

2001-07-30 14:13  cvs

	* added multithreading test

2001-07-30 09:32  cvs

	* Added -X option to the dccp to pass extra option in to the open
	  converstation

2001-07-26 13:43  cvs

	* Added benchmark tests

2001-07-18 11:23  cvs

	* added dc_hack.h

2001-07-18 08:33  cvs

	* fixed followLink on CREAT

2001-07-16 15:19  cvs

	* passed code through LINT

2001-07-16 15:12  cvs

	* some cosmetics in the makefile

2001-07-16 14:13  cvs

	* added URL like format in open

2001-07-16 09:37  cvs

	* Added link following in the dc_open

2001-07-13 12:25  cvs

	* fixed cache_open with getenv()

2001-07-13 11:09  cvs

	* improuved getControlMessage() function
	  improuved sayHello() function to recognise bad hello

2001-07-13 11:06  cvs

	* added pollDelete() function

2001-07-13 11:05  cvs

	* scaning only for ascii characters

2001-07-12 16:13  cvs

	* Added "load balancing" in to serverConnect

2001-07-11 11:06  cvs

	* new bugfix release
	  version 1.1.5

2001-07-11 11:06  cvs

	* fixed bug in deleteQueue #2

2001-07-11 10:45  cvs

	* new release 1.1.4

2001-07-11 10:40  cvs

	* bugfix in dc_close ( deleteQueue )
	  new release 1.1.3

2001-07-11 10:27  cvs

	* deleteQueue fixed

2001-07-10 08:39  cvs

	* First touch to reconnect

2001-07-04 14:26  cvs

	* fixed bug in dc_lseek
	  
	  node_plays.c compiled and linked as usual C file
	  dcap_nodes.h included into dcap.c for node_plays.c functions
	  declarations

2001-07-03 16:28  cvs

	* fixed fread and feof under linux
	  ported to linux, irix and alpha

2001-07-03 16:14  cvs

	* added fclose feof fopen fread fseek fwrite

2001-07-02 10:38  cvs

	* new release 1.1.2
	  read ahead implemented

2001-07-02 10:02  cvs

	* fixed memory leak

2001-07-02 09:47  cvs

	* changed setDebugLevel to dc_setDebugLevel

2001-07-02 09:46  cvs

	* some small changes in make release

2001-07-02 09:37  cvs

	* in dcap.c: some how the code was not synchronized
	  changed setDebugLevel to dc_setDebugLevel

2001-06-29 15:55  cvs

	* The documentation in seporate place now.

2001-06-29 10:47  cvs

	* fixed bug with reading rest of buffer
	  added dc_noBuffering and dc_setBufferSize functions prototypes in
	  to dcap.h

2001-06-28 12:03  cvs

	* dc_noBuffering and dc_setBufferSize

2001-06-28 08:56  cvs

	* Fixed read-ahead rest copy bug.

2001-06-26 21:41  cvs

	* Now it shoul work! (read ahead)

2001-06-26 13:34  cvs

	* Read ahead should work now

2001-06-25 14:35  cvs

	* Read ahead + seek inside buffer

2001-06-22 15:45  cvs

	* Read Ahead is realy working now

2001-06-19 15:12  cvs

	* First touch to Read ahead

2001-06-13 09:31  cvs

	* new release 1.1.1

2001-06-13 09:30  cvs

	* dcap.h included in install

2001-06-13 09:23  cvs

	* nothing runs @ first time

2001-06-13 09:18  cvs

	* fixed bug with open file descriptor

2001-06-11 14:31  cvs

	* New release 1.0.3

2001-06-11 14:30  cvs

	* addes install target

2001-06-11 14:20  cvs

	* improvement

2001-06-11 09:36  cvs

	* Improvement

2001-06-07 15:18  cvs

	* SEEK_AND_WRITE implemented

2001-06-07 15:18  cvs

	* Added support for C++

2001-06-07 12:17  cvs

	* Fixed bug in calculating file position.
	  Added debug printout for calcurated positions and offsets.

2001-06-06 13:33  cvs

	* Added SEEK_AND_READ command

2001-06-05 14:08  cvs

	* added dc_close2 function

2001-06-05 13:29  cvs

	* Added library documentation

2001-05-18 11:53  cvs

	* new release 1.0.2

2001-05-10 15:17  cvs

	* Added -std1 option to CFLAGS to switch C compiler to ANSI

2001-05-10 14:45  cvs

	* Added -DNOT_THREAD_SAFE derective to switchoff thread safe part
	  of code;
	  Corrected make file for alpha

2001-05-10 13:09  cvs

	* macros cleanup

2001-05-10 10:40  cvs

	* added alpha support

2001-05-07 15:03  cvs

	* Added Makefile for OSF/alpha

2001-05-07 15:02  cvs

	* ZZ

2001-05-03 10:17  cvs

	* Passed code through lint

2001-04-30 12:39  cvs

	* set socket recive buffer size only once
	  integrated deleteQueue in to dc_close

2001-04-30 12:35  cvs

	* added deleteQueue
	  improuved thread locking

2001-04-27 13:05  cvs

	* Setting socket recive buffer size in dc_read

2001-04-25 13:59  cvs

	* added restarting poll on the linux after interruption

2001-04-24 13:34  cvs

	* added dependences generation in to Makefile.sgi

2001-04-24 13:15  cvs

	* gramatic correction

2001-04-24 12:52  cvs

	* removed mQ fild in vspNode structure

2001-04-24 12:51  cvs

	* added include <string.h> for strdup

2001-04-24 12:02  cvs

	* fixed return type in dcap_version.c
	  added dependencies generation

2001-04-23 15:03  cvs

	* Added server error message in to dc_error output

2001-04-20 12:20  cvs

	* new version 1.0.1

2001-04-20 12:19  cvs

	* new option -i in dccp

2001-04-20 11:37  cvs

	* fixed bug in node_init

2001-04-20 11:36  cvs

	* fixed problem with incomplite quted messages

2001-04-20 11:36  cvs

	* fixed grammar error in printouts

2001-04-20 11:35  cvs

	* integrating new parser into the dcap_poll

2001-04-20 11:33  cvs

	* new parset for streams

2001-04-11 10:30  cvs

	* new version-1.0.0

2001-04-11 10:29  cvs

	* Fixed bug in generating dcap_version.c

2001-04-11 10:25  cvs

	* New Release 1.0.0

2001-04-11 10:22  cvs

	* added dcap_version.c

2001-04-11 10:21  cvs

	* Added library version in the usage printout

2001-04-11 10:20  cvs

	* Added version traceing

2001-04-10 11:12  cvs

	* New option of dccp in documentation
	  fixed mistake in printout

2001-04-09 14:52  cvs

	* added option -h for reply host name

2001-04-09 10:54  cvs

	* xa-xa... not all variables was unused...

2001-04-09 10:40  cvs

	* removed unused wariables

2001-04-09 10:33  cvs

	* temporary fixed problem with deleting messages, which still
	  needed in future

2001-04-06 20:56  cvs

	* The common part of the makefiles are moved in to the seporate
	  file

2001-04-06 13:02  cvs

	* cosmetics.

2001-04-06 12:30  cvs

	* man page for dccp

2001-04-06 11:27  cvs

	* added dummy SIGPIPE handler

2001-04-05 10:13  cvs

	* some cleanup in manipulating with asciiMessage

2001-04-04 15:35  cvs

	* fixed problem with geting error messages and connection in
	  ascii_open_conversation

2001-04-04 10:36  cvs

	* Added SGI Irix support

2001-04-04 07:36  cvs

	* no gcc warnings anymore

2001-04-03 15:35  cvs

	* allocating one byte less memory for pNfs ID

2001-04-03 15:21  cvs

	* some code cleanup and optimization

2001-04-03 14:24  cvs

	* added -d option

2001-04-03 14:23  cvs

	* some optimization + fixed misstakes in prontouts

2001-04-03 09:56  cvs

	* modified to have one callback connection

2001-04-02 16:08  cvs

	* fixed misstake in printout
	  fixed bug in freeing srv, srv->hostname befour last using

2001-04-02 15:57  cvs

	* fixed bug in the option staff

2001-04-02 15:38  cvs

	* added -d option for debug level

2001-04-02 13:45  cvs

	* seting default debug levet to error only

2001-04-02 11:10  cvs

	* Added lot of printout

2001-04-02 09:16  cvs

	* integrated dcap_debug in to the code

2001-04-02 09:03  cvs

	* Removed unneeded file access checking
	  fixed problem with enviroment configuration

2001-04-01 21:48  cvs

	* modified debugging printout

2001-04-01 21:48  cvs

	* added dcap_debug.c

2001-04-01 21:47  cvs

	* New debuging functions

2001-03-30 14:43  cvs

	* added messageDestroy

2001-03-30 14:26  cvs

	* we do not need dispatcher as it is. It's integrated in to the
	  code.

2001-03-30 13:22  cvs

	* implemented special counter for connection id

2001-03-30 12:49  cvs

	* getControlMessage modified
	  pointer to node used as message queue destination address

2001-03-30 12:47  cvs

	* extra printout in do_command_ok

2001-03-30 12:47  cvs

	* fixed argument in memmove

2001-03-30 11:44  cvs

	* fixed misstake in printout

2001-03-30 11:29  cvs

	* total_read and total_write zeroed for every file

2001-03-30 11:28  cvs

	* dc_lseek implemented

2001-03-30 10:25  cvs

	* added dc_setReplyHostName undocumented non POSIX function

2001-03-30 10:03  cvs

	* removed unreachable line of code

2001-03-30 09:05  cvs

	* added mode find in vsp_node structure

2001-03-29 22:24  cvs

	* fixed warnings at compile time on linux

2001-03-29 22:23  cvs

	* added dc_write implementation

2001-03-29 22:22  cvs

	* fixed dependencies for dccp
	  removed dcap_displatcher

2001-03-29 21:39  cvs

	* fixed warning messages at compile time on linux

2001-03-29 17:15  cvs

	* First touch to read and close
	  Added get_data get_fin get_ack get_reply htonll ntohll

2001-03-29 17:09  cvs

	* correction in printout

2001-03-29 17:06  cvs

	* added do_command_ok

2001-03-29 16:25  cvs

	* small corrections

2001-03-29 16:13  cvs

	* removed unneeded printouts

2001-03-29 15:24  cvs

	* added do_command_ok

2001-03-29 15:18  cvs

	* file removed befour abnormal exit

2001-03-29 14:45  cvs

	* added prototipe for sendDataMessage

2001-03-28 17:07  cvs

	* Fixed bug cousing code dump in dcap_poll

2001-03-28 08:31  cvs

	* removed unneeded free

2001-03-27 22:23  cvs

	* fixed bugs at realloc

2001-03-27 16:39  cvs

	* trying get ascii message form queue
	  buggi! core dumped at dcap_poll

2001-03-27 07:49  cvs

	* fixed misstake in printout

2001-03-27 07:36  cvs

	* Added readn

2001-03-26 23:12  cvs

	* added data_hello_conversation
	  poll improove

2001-03-26 20:54  cvs

	* Fixed problems with compiling on linux

2001-03-26 17:07  cvs

	* integrating dcap_poll into getControlMessage

2001-03-22 09:49  cvs

	* interpreter now allocates memory for result.

2001-03-22 08:59  cvs

	* Added queueGetMessage

2001-03-21 14:14  cvs

	* Added queueAddMessage

2001-03-21 10:35  cvs

	* Added queue manipulation

2001-03-20 17:42  cvs

	* added room for data chanel in poll_list

2001-03-19 23:44  cvs

	* Added *result as argument for command action.
	  Code cleanup for wor warnings with gcc.

2001-03-19 23:12  cvs

	* nothing special...

2001-03-15 17:18  cvs

	* ASCIIresult renamed in to the asciiMessage
	  new structure for message queue

2001-03-15 11:16  cvs

	* Continue playing aroud comands.

2001-03-14 15:57  cvs

	* Fixed makefile for linux

2001-03-14 15:46  cvs

	* added command handlers for dcap_interpreter

2001-03-14 11:48  cvs

	* new aproach

2001-03-13 17:16  cvs

	* An extra option in dcap_poll

2001-03-13 09:31  cvs

	* multiple file names.

2001-03-13 08:55  cvs

	* Added header file for dcap_interpreter()

2001-03-13 00:32  cvs

	* Fixed makefile for linux. Code cleaned from warnings at compile
	  time with gcc.

2001-03-13 00:01  cvs

	* new hash function.

2001-03-12 15:45  cvs

	* Cosmetisk + integrating poll and parser into the code.

2001-03-07 17:24  cvs

	* continue to playng with interpreter

2001-03-07 17:23  cvs

	* the socket descroptor stored in dhr poll_list

2001-03-07 09:57  cvs

	* Remodev unneeded part

2001-03-06 16:27  cvs

	* first touch to interpreter

2001-03-06 14:47  cvs

	* replaces system dependent part from dcap_dispatcher.c by include
	  file sysdep.h

2001-03-06 14:30  cvs

	* removed arguments in dcap_poll()

2001-03-06 10:35  cvs

	* Added include file for functions from dcap_poll.c

2001-03-06 10:29  cvs

	* system dependent part moved in to sysdep.h

2001-03-06 10:29  cvs

	* Some cosmetics

2001-03-06 10:28  cvs

	* added pollAdd funtion

2001-03-05 15:33  cvs

	* Added include file for parser

2001-03-05 15:29  cvs

	* first touch to dcap_poll.c

2001-03-02 12:49  cvs

	* added support for pthreads on the SUN's.

2001-03-02 12:46  cvs

	* added getControlMessage function prototype.

2001-03-02 08:41  cvs

	* This commit was generated by cvs2svn to compensate for changes in
	  r591,
	  which included commits to RCS files with non-trunk default
	  branches.

